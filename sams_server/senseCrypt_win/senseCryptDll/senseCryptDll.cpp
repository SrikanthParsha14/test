// senseCryptDll.cpp : 定义 DLL 应用程序的导出函数。
//

#include <stdio.h>
#include <string.h>
#include "senseCryptDll.h"
#include "crypt2.h"
#include "base64.h"

R_RSA_PUBLIC_KEY publicKey={
	0x400,
	{ 0x9c, 0xb9, 0x88, 0xdc, 0xd4, 0x58, 0x35, 0xd7, 0x6f, 0xfd, 0x4b, 0x51, 0xa8, 0xe7, 0x94, 0xab, 0x29, 0x85, 0x23, 0x24, 0x6d, 0x1, 0x6, 0x4d, 0x1f, 0x61, 0x4c, 0xf1, 0x2a, 0x64, 0x4, 0x70, 0x8c, 0x51, 0x4f, 0x5a, 0xd4, 0xdb, 0x9b, 0x6c, 0x67, 0x13, 0x98, 0xc2, 0x12, 0xfc, 0x20, 0xce, 0x13, 0xc5, 0xdc, 0x90, 0xea, 0x44, 0x39, 0xee, 0xe0, 0xe2, 0x36, 0x9a, 0xcb, 0xd5, 0x26, 0xe4, 0x6f, 0xe, 0x73, 0x8a, 0xaa, 0x52, 0x9e, 0xfb, 0xda, 0x23, 0x4c, 0x30, 0x3b, 0xeb, 0xc7, 0xcb, 0xd, 0xaa, 0x32, 0xab, 0x9f, 0xbd, 0x37, 0xf5, 0x4e, 0x45, 0x73, 0x47, 0xa4, 0x8b, 0x72, 0x8f, 0x37, 0xee, 0xd, 0x39, 0x78, 0x7f, 0x7, 0x4d, 0x5d, 0x17, 0x2b, 0x62, 0xcb, 0x67, 0x3d, 0xa6, 0xc4, 0xbe, 0x4a, 0x55, 0x7d, 0xed, 0xd3, 0x31, 0x79, 0xfc, 0xac, 0x2c, 0x27, 0xa2, 0x1f, 0xb5 },
	{ 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1 }
};

SENSECRYPTDLL_API int S4RSAPublicEncrypt(
			unsigned char *output,
			unsigned char *input,
			unsigned int inputLen
		  )
{
	unsigned int outLen;
	char* outbase64;
	int ret = RSAPublicEncrypt(output, &outLen, input, inputLen, &publicKey);
	outbase64 = base64_encode(output, outLen);
	memcpy(output, outbase64, strlen(outbase64));
	free(outbase64);

	return ret;
}

SENSECRYPTDLL_API int S4RSAVerify(
			char* input64,
			char* clear
		  )
{
	int length;
	unsigned char* input = base64_decode(input64, &length);
	int clearLen = strlen(clear);
	int ret = Verify(DA_SHS,
		(unsigned char *)clear,clearLen,
		input, length,
		&publicKey);
	free(input);
	return ret;
}