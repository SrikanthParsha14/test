(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    245536,       5900]
NotebookOptionsPosition[    243703,       5838]
NotebookOutlinePosition[    244323,       5862]
CellTagsIndexPosition[    244280,       5859]
WindowTitle->Four-Coloring Planar Graphs - Source
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Four-Coloring Planar Graphs", "Section",
 CellFrameColor->RGBColor[
  0.6449835965514611, 0.758632791638056, 0.2516823071641108],
 FontColor->RGBColor[
  0.6449835965514611, 0.758632791638056, 0.2516823071641108]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ToAdjacencyMatrixSW", "[", "g_Graph", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"e", "=", 
         RowBox[{"ToAdjacencyListsSW", "[", "g", "]"}]}], ",", 
        RowBox[{"blanks", "=", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"VV", "[", "g", "]"}], "}"}]}], "]"}]}], ",", "am", ",", 
        "nb", ",", "k"}], "}"}], ",", 
      RowBox[{
       RowBox[{"am", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"nb", "=", "blanks"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Scan", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
               "nb", "\[LeftDoubleBracket]", "#1", "\[RightDoubleBracket]"}], 
               "++"}], "&"}], ",", 
             RowBox[{
             "e", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
            "]"}], ";", "nb"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"Length", "[", "e", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"am", "\[LeftDoubleBracket]", 
           RowBox[{"k", ",", "k"}], "\[RightDoubleBracket]"}], "=", "0"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"VV", "[", "g", "]"}]}], "}"}]}], "]"}], ";", 
       RowBox[{"am", "/.", "\[InvisibleSpace]", 
        RowBox[{
         RowBox[{"_Integer", "?", "Positive"}], "\[Rule]", "1"}]}]}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FromAdjacencyMatrixSW", "[", 
     RowBox[{"m_", ",", " ", "v_List"}], "]"}], " ", ":=", " ", 
    RowBox[{"Graph", "[", 
     RowBox[{
      RowBox[{"Union", "@", 
       RowBox[{"(", 
        RowBox[{"List", " ", "/@", " ", 
         RowBox[{"(", 
          RowBox[{"Sort", "/@", "  ", 
           RowBox[{"Position", "[", 
            RowBox[{"m", ",", " ", "1"}], "]"}]}], ")"}]}], ")"}]}], ",", " ",
       "v"}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindPlotRangeSW", "[", "v_List", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xmax", ",", "xmin", ",", "ymax", ",", "ymin", ",", "xr", ",", "yr", 
       ",", "ave"}], "}"}], ",", 
     RowBox[{
      RowBox[{"xmin", "=", 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"First", "[", 
            RowBox[{"First", "[", "#1", "]"}], "]"}], "&"}], ")"}], "/@", 
         "v"}], "]"}]}], ";", 
      RowBox[{"xmax", "=", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"First", "[", 
            RowBox[{"First", "[", "#1", "]"}], "]"}], "&"}], ")"}], "/@", 
         "v"}], "]"}]}], ";", 
      RowBox[{"ymin", "=", 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"First", "[", "#1", "]"}], "]"}], "&"}], ")"}], "/@", 
         "v"}], "]"}]}], ";", 
      RowBox[{"ymax", "=", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Last", "[", 
            RowBox[{"First", "[", "#1", "]"}], "]"}], "&"}], ")"}], "/@", 
         "v"}], "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Chop", "[", 
          RowBox[{"xmax", "-", "xmin"}], "]"}], "\[Equal]", "0."}], ",", 
        RowBox[{
         RowBox[{"xmax", "+=", "0.05"}], ";", 
         RowBox[{"xmin", "-=", "0.05"}]}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Chop", "[", 
          RowBox[{"ymax", "-", "ymin"}], "]"}], "\[Equal]", "0."}], ",", 
        RowBox[{
         RowBox[{"ymax", "+=", "0.05"}], ";", 
         RowBox[{"ymin", "-=", "0.05"}]}]}], "]"}], ";", 
      RowBox[{"xr", "=", 
       RowBox[{"xmax", "-", "xmin"}]}], ";", 
      RowBox[{"yr", "=", 
       RowBox[{"ymax", "-", "ymin"}]}], ";", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         FractionBox["xr", "yr"], ">", "3"}], ",", 
        RowBox[{
         RowBox[{"ave", "=", 
          FractionBox[
           RowBox[{"ymax", "+", "ymin"}], "2"]}], ";", 
         RowBox[{"ymax", "=", 
          RowBox[{"ave", "+", 
           FractionBox["xr", "3"]}]}], ";", 
         RowBox[{"ymin", "=", 
          RowBox[{"ave", "-", 
           FractionBox["xr", "3"]}]}]}], ",", 
        RowBox[{
         FractionBox["yr", "xr"], ">", "3"}], ",", 
        RowBox[{
         RowBox[{"ave", "=", 
          FractionBox[
           RowBox[{"xmax", "+", "xmin"}], "2"]}], ";", 
         RowBox[{"xmax", "=", 
          RowBox[{"ave", "+", 
           FractionBox["yr", "3"]}]}], ";", 
         RowBox[{"xmin", "=", 
          RowBox[{"ave", "-", 
           FractionBox["yr", "3"]}]}]}]}], "]"}], ";", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xmin", "-", 
           RowBox[{"0.05", " ", 
            RowBox[{"Max", "[", 
             RowBox[{"1", ",", 
              RowBox[{"xmax", "-", "xmin"}]}], "]"}]}]}], ",", 
          RowBox[{"xmax", "+", 
           RowBox[{"0.05", " ", 
            RowBox[{"Max", "[", 
             RowBox[{"1", ",", 
              RowBox[{"xmax", "-", "xmin"}]}], "]"}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ymin", "-", 
           RowBox[{"0.05", " ", 
            RowBox[{"Max", "[", 
             RowBox[{"1", ",", 
              RowBox[{"ymax", "-", "ymin"}]}], "]"}]}]}], ",", 
          RowBox[{"ymax", "+", 
           RowBox[{"0.05", " ", 
            RowBox[{"Max", "[", 
             RowBox[{"1", ",", 
              RowBox[{"ymax", "-", "ymin"}]}], "]"}]}]}]}], "}"}]}], 
       "}"}]}]}], "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SeedRandom", "[", "1", "]"}], ";", 
  RowBox[{"perm", "=", 
   RowBox[{"{", 
    RowBox[{
    "6", ",", "1", ",", "2", ",", "13", ",", "16", ",", "3", ",", "15", ",", 
     "9", ",", "4", ",", "8", ",", "17", ",", "12", ",", "14", ",", "11", ",",
      "5", ",", "10", ",", "7"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"permInv", "=", 
    RowBox[{"{", 
     RowBox[{
     "2", ",", "3", ",", "6", ",", "9", ",", "15", ",", "1", ",", "17", ",", 
      "10", ",", "8", ",", "16", ",", "14", ",", "12", ",", "4", ",", "13", 
      ",", "7", ",", "5", ",", "11"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InversePermutation", "[", "s_", "]"}], " ", ":=", " ", 
    RowBox[{"Ordering", "[", "s", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ErreraGraphSW", "=", 
    RowBox[{"PlanarGraph", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"1", ",", "5"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"1", ",", "10"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"1", ",", "12"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"1", ",", "17"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"2", ",", "8"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"2", ",", "9"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"2", ",", "13"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"2", ",", "14"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"2", ",", "15"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"3", ",", "5"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"3", ",", "10"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"3", ",", "11"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"3", ",", "15"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"4", ",", "6"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"4", ",", "8"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"4", ",", "11"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"4", ",", "13"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"4", ",", "16"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"5", ",", "11"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"5", ",", "12"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"5", ",", "16"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"6", ",", "7"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"6", ",", "13"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"6", ",", "14"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"6", ",", "16"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"7", ",", "9"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"7", ",", "12"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"7", ",", "14"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"7", ",", "16"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"7", ",", "17"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"8", ",", "11"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"8", ",", "13"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"8", ",", "15"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"9", ",", "10"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"9", ",", "14"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"9", ",", "15"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"9", ",", "17"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"10", ",", "15"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"10", ",", "17"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"11", ",", "15"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"11", ",", "16"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"12", ",", "16"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"12", ",", "17"}], "}"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"13", ",", "14"}], "}"}], "}"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"4", ",", "13"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"4", ",", "6"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.2"}], ",", "5"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"2", ",", "2.2"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "6"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"6", ",", "2.2"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"9.5", ",", "1.6"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"2.7", ",", "5"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"4.8", ",", "7.8"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"4", ",", "10.4"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.5"}], ",", "1.6"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"14", ",", 
            RowBox[{"-", "1"}]}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"4", ",", "3.6"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"5.3", ",", "5"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"3.2", ",", "7.8"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"4", ",", "0.3"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"8.1", ",", "5"}], "}"}], "}"}]}], "}"}], "/.", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", " ", "y_"}], "}"}], " ", "\[RuleDelayed]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "/", "15"}], "+", ".5"}], ")"}], "/", "1.4"}], ",", 
          
          RowBox[{"y", "/", "15"}]}], "}"}]}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ErreraGraphSWP", "=", 
    RowBox[{"PlanarGraph", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"1", ",", "5"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"1", ",", "10"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"1", ",", "12"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"1", ",", "17"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"2", ",", "8"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"2", ",", "9"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"2", ",", "13"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"2", ",", "14"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"2", ",", "15"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"3", ",", "5"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"3", ",", "10"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"3", ",", "11"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"3", ",", "15"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"4", ",", "6"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"4", ",", "8"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"4", ",", "11"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"4", ",", "13"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"4", ",", "16"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"5", ",", "11"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"5", ",", "12"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"5", ",", "16"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"6", ",", "7"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"6", ",", "13"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"6", ",", "14"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"6", ",", "16"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"7", ",", "9"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"7", ",", "12"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"7", ",", "14"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"7", ",", "16"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"7", ",", "17"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"8", ",", "11"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"8", ",", "13"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"8", ",", "15"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"9", ",", "10"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"9", ",", "14"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"9", ",", "15"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"9", ",", "17"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"10", ",", "15"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"10", ",", "17"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"11", ",", "15"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"11", ",", "16"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"12", ",", "16"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"12", ",", "17"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"13", ",", "14"}], "}"}], "}"}]}], "}"}], "/.", " ", 
       RowBox[{"i_Integer", ":>", 
        RowBox[{"permInv", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "13"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "6"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.2"}], ",", "5"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "2.2"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "6"}], ",", 
             RowBox[{"-", "1"}]}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"6", ",", "2.2"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"9.5", ",", "1.6"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2.7", ",", "5"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4.8", ",", "7.8"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "10.4"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.5"}], ",", "1.6"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"14", ",", 
             RowBox[{"-", "1"}]}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "3.6"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"5.3", ",", "5"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"3.2", ",", "7.8"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "0.3"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"8.1", ",", "5"}], "}"}], "}"}]}], "}"}], "[", 
        RowBox[{"[", "perm", "]"}], "]"}], "/.", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", " ", "y_"}], "}"}], " ", "\[RuleDelayed]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "/", "15"}], "+", ".5"}], ")"}], "/", "1.4"}], ",", 
          
          RowBox[{"y", "/", "15"}]}], "}"}]}]}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Soifer", "=", 
    RowBox[{"PlanarGraph", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"1", ",", " ", "3"}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"1", ",", " ", "4"}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"1", ",", " ", "6"}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"1", ",", " ", "7"}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"1", ",", " ", "9"}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"2", ",", " ", "4"}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"2", ",", " ", "5"}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"2", ",", " ", "6"}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"2", ",", " ", "8"}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"2", ",", " ", "9"}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"3", ",", " ", "5"}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"3", ",", " ", "7"}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"3", ",", " ", "8"}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"4", ",", " ", "6"}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"4", ",", " ", "8"}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"5", ",", " ", "7"}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"5", ",", " ", "8"}], "}"}], "}"}], ",", " ", "\n", "  ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"5", ",", " ", "9"}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"6", ",", " ", "9"}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"7", ",", " ", "9"}], "}"}], "}"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"5.", ",", " ", "0."}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"2.5", ",", " ", "2.35"}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0.", ",", " ", "0."}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"3.2", ",", " ", "3."}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"1.8", ",", " ", "1.7"}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"3.2", ",", " ", "1.7"}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"1.4", ",", " ", "0.6"}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"1.8", ",", " ", "3."}], "}"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"2.5", ",", " ", "1.05"}], "}"}], "}"}]}], "}"}]}], "]"}]}],
    ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AllColors", " ", "=", " ", 
   RowBox[{
    RowBox[{"ColorData", "[", 
     RowBox[{"\"\<Legacy\>\"", ",", " ", "\"\<Range\>\""}], "]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NiceColorSetNames", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"#", ",", " ", "\[IndentingNewLine]", 
        RowBox[{"Complement", "[", 
         RowBox[{"AllColors", ",", " ", 
          RowBox[{"Join", "[", 
           RowBox[{"#", ",", " ", 
            RowBox[{"{", 
             RowBox[{
             "\"\<NavyBlue\>\"", ",", "\"\<Black\>\"", ",", "\"\<White\>\""}],
              "}"}]}], "]"}]}], "]"}]}], "]"}], " ", "&"}], ")"}], "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Red\>\"", ",", " ", "\"\<Green\>\"", ",", "\n", "   ", 
      "\"\<Blue\>\"", ",", " ", "\"\<Yellow\>\"", ",", "\"\<Magenta\>\"", 
      ",", "\"\<LemonChiffon\>\"", ",", " ", "\"\<DarkOrchid\>\"", ",", " ", 
      "\"\<LightSalmon\>\"", ",", "\n", "   ", "\"\<LightPink\>\"", ",", " ", 
      "\"\<Sienna\>\"", ",", " ", "\"\<Green\>\"", ",", " ", "\"\<Mint\>\"", 
      ",", "\"\<DarkSlateGray\>\"", ",", " ", "\"\<ManganeseBlue\>\"", ",", 
      " ", "\"\<SlateGray\>\"", ",", "\n", "   ", "\"\<DarkOrange\>\"", ",", 
      " ", "\"\<MistyRose\>\"", ",", " ", "\"\<DeepNaplesYellow\>\"", ",", 
      "   ", "\"\<GoldOchre\>\"", ",", " ", "\"\<SapGreen\>\""}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NiceColorSet", "=", " ", 
   RowBox[{
    RowBox[{"NiceColorSetNames", "/.", 
     RowBox[{"(", 
      RowBox[{"ColorData", "[", 
       RowBox[{"\"\<Legacy\>\"", ",", " ", "\"\<ColorRules\>\""}], "]"}], 
      ")"}]}], "/.", " ", 
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Red\>\"", ",", "\"\<Green\>\"", ",", "\"\<Blue\>\"", ",", " ", 
        "\"\<Yellow\>\"", ",", " ", "\"\<Magenta\>\""}], "}"}], "\[Rule]", 
      " ", 
      RowBox[{"{", 
       RowBox[{
       "Red", ",", "Green", ",", "Blue", ",", " ", "Yellow", ",", " ", 
        "Magenta"}], "}"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SoftColorsPlus", "[", 
     RowBox[{"c_:", 
      RowBox[{"GrayLevel", "[", "1", "]"}]}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Lighter", "@", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0.05", ",", "0.3"}], "]"}]}], ",", 
      RowBox[{"Lighter", "@", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.4", ",", "1", ",", "0.4"}], "]"}]}], ",", 
      RowBox[{"Lighter", "@", 
       RowBox[{"RGBColor", "[", 
        RowBox[{".1", ",", ".7", ",", "1"}], "]"}]}], ",", 
      RowBox[{"Lighter", "@", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "1", ",", "0.5"}], "]"}]}], ",", "c"}], "}"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{"Red", ",", "Green", ",", "Blue", ",", "Yellow"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"extend", "[", "l_", "]"}], ":=", 
   RowBox[{"Append", "[", 
    RowBox[{"l", ",", 
     RowBox[{"First", "[", "l", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"canon", "[", "l_", "]"}], ":=", 
   RowBox[{"RotateLeft", "[", 
    RowBox[{"l", ",", 
     RowBox[{
      RowBox[{"Ordering", "[", 
       RowBox[{"l", ",", "1"}], "]"}], "-", "1"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"join", "[", 
    RowBox[{"{", 
     RowBox[{"n_", ",", "l_"}], "}"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "n", "}"}], ",", "#"}], "]"}], "&"}], ")"}], "/@", 
    "l"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"edgesSorted", "[", "l_", "]"}], ":=", 
   RowBox[{"Sort", "/@", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"extend", "[", "l", "]"}], ",", "2", ",", "1"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"adjacent", "[", 
     RowBox[{"face1_", ",", "face2_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"face1", "=!=", "face2"}], "&&", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Intersection", "@@", 
          RowBox[{"(", 
           RowBox[{"edgesSorted", "/@", 
            RowBox[{"{", 
             RowBox[{"face1", ",", "face2"}], "}"}]}], ")"}]}], ")"}], 
        "\[NotEqual]", 
        RowBox[{"{", "}"}]}]}], ",", "1", ",", "0"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EdgesSW", "[", "G_Graph", "]"}], ":=", 
    RowBox[{"First", "/@", 
     RowBox[{"G", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ToAdjacencyListsSW", "[", "G_Graph", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"etemp", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"ee", "=", 
          RowBox[{"Sort", "/@", 
           RowBox[{"EdgesSW", "[", "G", "]"}]}]}], ")"}], "\[Union]", 
        RowBox[{"Reverse", "/@", "ee"}]}]}], ";", 
      RowBox[{"missing", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", 
           RowBox[{
           "G", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "]"}],
           "]"}], ",", 
         RowBox[{"First", "/@", "etemp"}]}], "]"}]}], ";", 
      RowBox[{"etemp", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{"Join", "[", 
         RowBox[{"etemp", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"m", ",", 
              RowBox[{"{", "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"m", ",", "missing"}], "}"}]}], "]"}]}], "]"}], "]"}]}], 
      ";", 
      RowBox[{
       RowBox[{
        RowBox[{"Split", "[", 
         RowBox[{"etemp", ",", 
          RowBox[{
           RowBox[{
            RowBox[{
            "#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "===", 
            RowBox[{
            "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           "&"}]}], "]"}], "/.", "\[InvisibleSpace]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"_Integer", ",", "n_"}], "}"}], "\[RuleDelayed]", "n"}]}], "/.",
        "\[InvisibleSpace]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", "}"}], "}"}], "\[Rule]", 
        RowBox[{"{", "}"}]}]}]}], ")"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EdgeSet", "[", 
    RowBox[{"PlanarGraph", "[", "g__", "]"}], "]"}], " ", ":=", " ", 
   RowBox[{"EdgeSet", "[", 
    RowBox[{"Graph", "[", "g", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EdgeSet", "[", "g_Graph", "]"}], ":=", 
    RowBox[{"First", "/@", " ", 
     RowBox[{"g", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Neighbors", "[", 
    RowBox[{"g_Graph", ",", "v_Integer"}], "]"}], ":=", 
   RowBox[{"Cases", "[", 
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"z_", ",", "v", ",", "___"}], "}"}], "}"}], "|", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"v", ",", "z_", ",", "___"}], "}"}], "}"}]}], 
      "\[RuleDelayed]", "z"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Neighbors", "[", 
    RowBox[{"g_PlanarGraph", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Neighbors", "[", 
    RowBox[{
     RowBox[{"Graph", "@@", "g"}], ",", "v"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Neighbors", "[", 
    RowBox[{"g_", ",", "v_List"}], "]"}], ":=", 
   RowBox[{"Union", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Neighbors", "[", 
        RowBox[{"g", ",", "#"}], "]"}], "&"}], "/@", "v"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Neighbors", "[", 
    RowBox[{"adj_List", ",", "v_Integer", ",", "col_", ",", "goodcol_"}], 
    "]"}], ":=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Prepend", "[", 
      RowBox[{
       RowBox[{"adj", "\[LeftDoubleBracket]", "v", "\[RightDoubleBracket]"}], 
       ",", "v"}], "]"}], ",", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"goodcol", ",", 
        RowBox[{
        "col", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}]}], 
       "]"}], "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VV", "[", 
    RowBox[{"PlanarGraph", "[", 
     RowBox[{"_", ",", " ", "v_"}], "]"}], "]"}], ":=", 
   RowBox[{"Length", "[", "v", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VV", "[", 
    RowBox[{"Graph", "[", 
     RowBox[{"_", ",", " ", "v_"}], "]"}], "]"}], ":=", 
   RowBox[{"Length", "[", "v", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VerticesSW", "[", 
    RowBox[{"PlanarGraph", "[", "g__", "]"}], "]"}], ":=", 
   RowBox[{"VerticesSW", "[", 
    RowBox[{"Graph", "[", "g", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"VerticesSW", "[", 
     RowBox[{"Graph", "[", 
      RowBox[{"_", ",", " ", "vv_"}], "]"}], "]"}], ":=", 
    RowBox[{"First", "/@", " ", "vv"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ShowPlanarGraph", "[", 
     RowBox[{
     "g_PlanarGraph", ",", "vcoloring_", ",", "vcolList_", ",", 
      "opts___Rule"}], "]"}], ":=", 
    RowBox[{"ShowPlanarGraph", "[", 
     RowBox[{
      RowBox[{"Graph", "@@", "g"}], ",", "vcoloring", ",", "vcolList", ",", 
      "opts"}], "]"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ShowPlanarGraph", "[", 
     RowBox[{
     "g1_Graph", ",", "vcoloring_", ",", "vcolList_", ",", "opts___Rule"}], 
     "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"g", ",", "esty", ",", 
        RowBox[{"vsize", "=", 
         RowBox[{"PointSize", "[", "0.045", "]"}]}], ",", "pts", ",", "lines",
         ",", " ", "ec"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ec", "=", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.5", ",", "0", ",", "0"}], "]"}]}], ";", 
       RowBox[{"normalQ", "=", "False"}], ";", 
       RowBox[{"esty", "=", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"vcol", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"ListQ", "[", "esty", "]"}]}], ",", 
         RowBox[{"esty", "=", 
          RowBox[{"{", "esty", "}"}]}]}], "]"}], ";", " ", 
       RowBox[{"esty", " ", "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{"esty", ",", " ", "ec"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"g", "=", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"normalQ", ",", "NormalizeVertices", ",", "Identity"}], 
          "]"}], "[", "g1", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"pts", "=", 
        RowBox[{"Point", " ", "/@", " ", 
         RowBox[{"(", 
          RowBox[{"First", " ", "/@", " ", 
           RowBox[{
           "g", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"colList", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Length", "[", "pts", "]"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"colpts", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"vcoloring", "===", "None"}], "||", 
           RowBox[{"vcoloring", "===", "False"}]}], ",", "pts", ",", "  ", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"vcolList", "[", 
              RowBox[{"[", "vcoloring", "]"}], "]"}], ",", "pts"}], "}"}], 
           "]"}], ",", " ", "pts"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"lines", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Line", " ", "[", 
           RowBox[{"g", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "#", ",", "1"}], "]"}], "]"}], "]"}], "&"}], "/@", 
         RowBox[{"EdgeSet", "[", "g", "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vsize", "=", 
        RowBox[{"vsize", "/.", 
         RowBox[{"Automatic", "\[Rule]", 
          RowBox[{"PointSize", "[", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"VV", "[", "g1", "]"}], "\[LessEqual]", "12"}], ",", 
             "0.035", ",", 
             RowBox[{
              RowBox[{"VV", "[", "g1", "]"}], "\[LessEqual]", "25"}], ",", 
             "0.022", ",", 
             RowBox[{
              RowBox[{"VV", "[", "g1", "]"}], "\[LessEqual]", "100"}], ",", 
             "0.018", ",", "True", ",", "0.01"}], "]"}], "]"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{"esty", ",", "lines"}], "]"}], ",", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"vcol", ",", "vsize"}], "}"}], ",", "colpts"}], "]"}]}],
           "}"}], ",", 
         RowBox[{"Sequence", "@@", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", "opts", "}"}], ",", " ", 
            RowBox[{"First", " ", "/@", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"AlignmentPoint", "\[Rule]", "Center"}], ",", 
               RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"Axes", "\[Rule]", "False"}], ",", 
               RowBox[{"AxesLabel", "\[Rule]", "None"}], ",", 
               RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"AxesStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
               RowBox[{"Background", "\[Rule]", "None"}], ",", 
               RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"BaseStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
               RowBox[{"ColorOutput", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"CoordinatesToolOptions", "\[Rule]", "Automatic"}], 
               ",", 
               RowBox[{
               "DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}], ",", 
               RowBox[{"Epilog", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
               RowBox[{"FormatType", "\[RuleDelayed]", "TraditionalForm"}], 
               ",", 
               RowBox[{"Frame", "\[Rule]", "False"}], ",", 
               RowBox[{"FrameLabel", "\[Rule]", "None"}], ",", 
               RowBox[{"FrameStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
               RowBox[{"FrameTicks", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"FrameTicksStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
               RowBox[{"GridLines", "\[Rule]", "None"}], ",", 
               RowBox[{"GridLinesStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
               RowBox[{"ImageMargins", "\[Rule]", "0.`"}], ",", 
               RowBox[{"ImagePadding", "\[Rule]", "All"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
               RowBox[{"Method", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"PlotLabel", "\[Rule]", "None"}], ",", 
               RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
               RowBox[{"PlotRangeClipping", "\[Rule]", "False"}], ",", 
               RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"PlotRegion", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"PreserveImageOptions", "\[Rule]", "Automatic"}], ",", 
               
               RowBox[{"Prolog", "\[Rule]", 
                RowBox[{"{", "}"}]}], ",", 
               RowBox[{"RotateLabel", "\[Rule]", "True"}], ",", 
               RowBox[{"Ticks", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"TicksStyle", "\[Rule]", 
                RowBox[{"{", "}"}]}]}], "}"}]}]}], "]"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"FindPlotRangeSW", "[", 
           RowBox[{"List", "/@", " ", 
            RowBox[{"VerticesSW", "[", "g", "]"}]}], "]"}]}]}], "]"}]}]}], 
     "]"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AdjMatrixToEdges", "[", "mat_", "]"}], " ", ":=", " ", 
    RowBox[{"Union", "[", 
     RowBox[{"List", " ", "/@", " ", 
      RowBox[{"(", 
       RowBox[{"Sort", "/@", " ", 
        RowBox[{"Position", "[", 
         RowBox[{"mat", ",", "1"}], "]"}]}], ")"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DegreeSequenceOrdered1", "[", "g_Graph", "]"}], ":=", 
   RowBox[{"Length", "/@", 
    RowBox[{"ToAdjacencyListsSW", "[", "g", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DegreeSequenceOrdered1", "[", "g_PlanarGraph", "]"}], ":=", 
   RowBox[{"DegreeSequenceOrdered1", "[", 
    RowBox[{"Graph", "@@", "g"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Neighbors1", "[", 
    RowBox[{"g_Graph", ",", "v_Integer"}], "]"}], ":=", 
   RowBox[{"Cases", "[", 
    RowBox[{
     RowBox[{"g", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"z_", ",", "v", ",", "___"}], "}"}], "}"}], "|", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"v", ",", "z_", ",", "___"}], "}"}], "}"}]}], 
      "\[RuleDelayed]", "z"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Neighbors1", "[", 
    RowBox[{"g_PlanarGraph", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Neighbors1", "[", 
    RowBox[{
     RowBox[{"Graph", "@@", "g"}], ",", "v"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Neighbors1", "[", 
    RowBox[{"g_", ",", "v_List"}], "]"}], ":=", 
   RowBox[{"Union", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Neighbors1", "[", 
        RowBox[{"g", ",", "#"}], "]"}], "&"}], "/@", "v"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToAdjacencyLists1", "[", 
    RowBox[{"g_PlanarGraph", "|", "g_Graph"}], "]"}], ":=", 
   RowBox[{"ToAdjacencyListsSW", "[", 
    RowBox[{"Graph", "@@", "g"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MakePointsCounterclockwise1", "[", 
    RowBox[{"pts_", ",", "offset_"}], "]"}], ":=", 
   RowBox[{"SortBy", "[", 
    RowBox[{
     RowBox[{"N", "[", "pts", "]"}], ",", 
     RowBox[{
      RowBox[{"Arg", "[", 
       RowBox[{"Complex", "@@", 
        RowBox[{"(", 
         RowBox[{"#", "-", "offset"}], ")"}]}], "]"}], "&"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"KempeOrder1", "[", 
   RowBox[{"g_PlanarGraph", "|", "g_Graph"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"degs", "=", 
       RowBox[{"DegreeSequenceOrdered1", "[", "g", "]"}]}], ",", "v"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"v", "=", 
        RowBox[{
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"VV", "[", "g", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
             "degs", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], 
             "\[LessEqual]", "5"}], "&"}], ",", "1"}], "]"}], 
         "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "degs", "\[LeftDoubleBracket]", "v", "\[RightDoubleBracket]"}], "=", 
        "\[Infinity]"}], ";", 
       RowBox[{
        RowBox[{"degs", "\[LeftDoubleBracket]", 
         RowBox[{"Neighbors1", "[", 
          RowBox[{"g", ",", "v"}], "]"}], "\[RightDoubleBracket]"}], "--"}], 
       ";", "v"}], ",", 
      RowBox[{"{", 
       RowBox[{"VV", "[", "g", "]"}], "}"}]}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Neighbors1", "[", 
    RowBox[{"adj_List", ",", "v_Integer", ",", "col_", ",", "goodcol_"}], 
    "]"}], ":=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Prepend", "[", 
      RowBox[{
       RowBox[{"adj", "\[LeftDoubleBracket]", "v", "\[RightDoubleBracket]"}], 
       ",", "v"}], "]"}], ",", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"goodcol", ",", 
        RowBox[{
        "col", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}]}], 
       "]"}], "&"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"KempeChain1", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v1_", ",", "vv2_"}], "}"}], ",", "coloring_List"}], "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"answer", "=", "coloring"}], ";", 
     RowBox[{"chold", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"chain", "=", 
      RowBox[{"{", "v1", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"success", "=", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"{", "vv2", "}"}], "]"}], "\[Intersection]", "chain"}], 
            "\[Equal]", 
            RowBox[{"{", "}"}]}], ")"}]}], ")"}], "&&", 
        RowBox[{"chain", "\[NotEqual]", "chold"}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"chold", ",", "chain"}], "}"}], "=", 
        RowBox[{"{", 
         RowBox[{"chain", ",", 
          RowBox[{"Union", "[", 
           RowBox[{"chain", ",", 
            RowBox[{"Union", "@@", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Neighbors1", "[", 
                 RowBox[{"gadj", ",", "#", ",", "coloring", ",", 
                  RowBox[{"coloring", "\[LeftDoubleBracket]", 
                   RowBox[{"Flatten", "[", 
                    RowBox[{"{", 
                    RowBox[{"v1", ",", "vv2"}], "}"}], "]"}], 
                   "\[RightDoubleBracket]"}]}], "]"}], "&"}], ")"}], "/@", 
              "chain"}]}]}], "]"}]}], "}"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"success", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"answer", "=", 
           RowBox[{"ReplacePart", "[", 
            RowBox[{"answer", ",", 
             RowBox[{"j", "\[Rule]", 
              RowBox[{
               RowBox[{"Complement", "[", 
                RowBox[{
                 RowBox[{"coloring", "\[LeftDoubleBracket]", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{"{", 
                    RowBox[{"v1", ",", "vv2"}], "}"}], "]"}], 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "answer", "\[LeftDoubleBracket]", "j", 
                   "\[RightDoubleBracket]"}], "}"}]}], "]"}], 
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
            "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "chain"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "answer"}], ",", " ", "False"}], "]"}]}], 
    ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InduceSubgraphMatrix", "[", 
    RowBox[{
     RowBox[{"GraphMat", "[", 
      RowBox[{"g_", ",", "v_"}], "]"}], ",", "s_List"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"GraphMat", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"g", "\[LeftDoubleBracket]", "s", "\[RightDoubleBracket]"}], 
         "]"}], "\[LeftDoubleBracket]", "s", "\[RightDoubleBracket]"}], "]"}],
       ",", 
      RowBox[{"v", "\[LeftDoubleBracket]", "s", "\[RightDoubleBracket]"}]}], 
     "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "s", "]"}], "\[LessEqual]", 
     RowBox[{"Length", "[", "g", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InduceSubgraphRespectOrder1", "[", 
    RowBox[{"g_PlanarGraph", ",", "verts_"}], "]"}], ":=", 
   RowBox[{"PlanarGraph", "@@", 
    RowBox[{"InduceSubgraphRespectOrder1", "[", 
     RowBox[{
      RowBox[{"Graph", "@@", "g"}], ",", "verts"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InduceSubgraphRespectOrder1", "[", 
    RowBox[{"g_Graph", ",", "s_"}], "]"}], ":=", 
   RowBox[{"FromAdjacencyMatrixSW", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"InduceSubgraphMatrix", "[", 
       RowBox[{
        RowBox[{"GraphMat", "[", 
         RowBox[{
          RowBox[{"ToAdjacencyMatrixSW", "[", "g", "]"}], ",", 
          RowBox[{"First", "/@", 
           RowBox[{
           "g", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
         "]"}], ",", "s"}], "]"}], "\[LeftDoubleBracket]", "1", 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{"g", "\[LeftDoubleBracket]", 
      RowBox[{"2", ",", "s"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"colCode", "=", 
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], " ", "\[Rule]", 
      " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<red\>\"", ",", " ", "\"\<green\>\"", ",", " ", "\"\<blue\>\"", 
        ",", " ", "\"\<yellow\>\""}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FourColoring1", "[", "g_PlanarGraph", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cols", "=", 
       RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"KempeList", "=", 
       RowBox[{"partialcols", "=", 
        RowBox[{"{", "}"}]}]}], ";", 
      RowBox[{"order", "=", 
       RowBox[{"KempeOrder1", "[", "g", "]"}]}], ";", 
      RowBox[{"fc", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"nbrs", "=", 
          RowBox[{
           RowBox[{"Neighbors1", "[", 
            RowBox[{
             RowBox[{"InduceSubgraphRespectOrder1", "[", 
              RowBox[{"g", ",", 
               RowBox[{"Take", "[", 
                RowBox[{"order", ",", 
                 RowBox[{"-", "j"}]}], "]"}]}], "]"}], ",", "1"}], "]"}], "-",
            "1"}]}], ";", "\[IndentingNewLine]", "      ", 
         StyleBox[
          RowBox[{"(*", " ", 
           RowBox[{
           "1", " ", "is", " ", "subtracted", " ", "because", " ", "the", " ",
             "first", " ", "vertex", " ", "is", " ", "to", " ", "be", " ", 
            "deleted"}], " ", "*)"}],
          FontWeight->"Plain"], 
         StyleBox["\[IndentingNewLine]",
          FontWeight->"Plain"], 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"lennbr", "=", 
              RowBox[{"Length", "[", 
               RowBox[{"Union", "[", 
                RowBox[{
                "cols", "\[LeftDoubleBracket]", "nbrs", 
                 "\[RightDoubleBracket]"}], "]"}], "]"}]}], ")"}], 
            "\[LessEqual]", "3"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           StyleBox[
            RowBox[{"(*", " ", 
             RowBox[{"Easy", " ", 
              RowBox[{"case", ":", " ", 
               RowBox[{
               "add", " ", "to", " ", "the", " ", "color", " ", "list", " ", 
                "by", " ", "using", " ", "the", " ", "first", " ", 
                "available", " ", "color"}]}]}], " ", "*)"}],
            FontWeight->"Plain"], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"cols", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"newcol", "=", 
                 RowBox[{"First", "[", 
                  RowBox[{"Complement", "[", 
                   RowBox[{
                    RowBox[{"Range", "[", "4", "]"}], ",", 
                    RowBox[{
                    "cols", "\[LeftDoubleBracket]", "nbrs", 
                    "\[RightDoubleBracket]"}]}], "]"}], "]"}]}], ",", 
                "cols"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"KempeList", ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", " ", "0", ",", 
                RowBox[{"StringForm", "[", 
                 RowBox[{
                 "\"\< `` `` used for neighbors of ``; first free color for \
`` is ``.\>\"", ",", " ", "lennbr", ",", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"lennbr", "\[Equal]", "1"}], ",", " ", 
                    "\"\<color\>\"", ",", "\"\<colors\>\""}], "]"}], ",", 
                  RowBox[{"order", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "j"}], "]"}], "]"}], ",", 
                  RowBox[{"order", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "j"}], "]"}], "]"}], ",", 
                  RowBox[{"newcol", "/.", " ", "colCode"}]}], "]"}]}], 
               "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           StyleBox[
            RowBox[{"(*", " ", 
             RowBox[{"The", " ", "Kempe", " ", "chain", " ", 
              RowBox[{"case", ":", " ", 
               RowBox[{
               "first", " ", "look", " ", "at", " ", "the", " ", "uncolored", 
                " ", "subgraph", " ", "and", " ", "then", " ", "call", " ", 
                "\[IndentingNewLine]", "the", " ", "Kempe", " ", "chain", " ",
                 "subroutine", " ", "in", " ", "proper", " ", 
                "sequence"}]}]}], " ", "*)"}],
            FontWeight->"Plain"], 
           StyleBox["\[IndentingNewLine]",
            FontWeight->"Plain"], 
           RowBox[{
            RowBox[{"pts", "=", 
             RowBox[{"First", "/@", 
              RowBox[{"N", "[", 
               RowBox[{
                RowBox[{"InduceSubgraphRespectOrder1", "[", 
                 RowBox[{"g", ",", 
                  RowBox[{"Take", "[", 
                   RowBox[{"order", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "j"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "]"}], 
                "\[LeftDoubleBracket]", 
                RowBox[{"2", ",", 
                 RowBox[{"Prepend", "[", 
                  RowBox[{
                   RowBox[{"nbrs", "+", "1"}], ",", "1"}], "]"}]}], 
                "\[RightDoubleBracket]"}], "]"}]}]}], ";", 
            RowBox[{"nbrs", "=", 
             RowBox[{"nbrs", "\[LeftDoubleBracket]", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{
                    RowBox[{"Rest", "[", "pts", "]"}], ",", "#1"}], "]"}], 
                  "&"}], ")"}], "/@", "\[IndentingNewLine]", "  ", 
                RowBox[{"MakePointsCounterclockwise1", "[", 
                 RowBox[{
                  RowBox[{"Rest", "[", "pts", "]"}], ",", 
                  RowBox[{"First", "[", "pts", "]"}]}], "]"}]}], "]"}], 
              "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
            StyleBox["\[IndentingNewLine]",
             FontWeight->"Plain"], 
            RowBox[{
             StyleBox["(*",
              FontWeight->"Plain"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             RowBox[{
              RowBox[{
               StyleBox["We",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["now",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["store",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["the",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["adjacency",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["lists",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["in",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], "gadj"}], 
              StyleBox[";",
               FontWeight->"Plain"], 
              StyleBox[" ",
               FontWeight->"Plain"], 
              StyleBox[
               RowBox[{"saves", " ", "memory"}],
               FontWeight->"Plain"]}], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["*)",
              FontWeight->"Plain"]}], "\[IndentingNewLine]", 
            RowBox[{"gadj", "=", 
             RowBox[{"ToAdjacencyLists1", "[", 
              RowBox[{"InduceSubgraphRespectOrder1", "[", 
               RowBox[{"g", ",", 
                RowBox[{"Take", "[", 
                 RowBox[{"order", ",", 
                  RowBox[{
                   RowBox[{"-", "j"}], "+", "1"}]}], "]"}]}], "]"}], "]"}]}], 
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            StyleBox[
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"Next", " ", "comes", " ", "the", " ", "degree"}], 
                "-", 
                RowBox[{"4", " ", "case"}]}], ",", " ", 
               RowBox[{
               "which", " ", "is", " ", "always", " ", "successful"}]}], " ", 
              "*)"}],
             FontWeight->"Plain"], 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "nbrs", "]"}], "\[Equal]", "4"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"fc1", "=", 
                RowBox[{"KempeChain1", "[", 
                 RowBox[{
                  RowBox[{"nbrs", "\[LeftDoubleBracket]", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], "\[RightDoubleBracket]"}],
                   ",", "cols"}], "]"}]}], ";", 
               RowBox[{"fc", "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"fc1", "=!=", "False"}], ",", "fc1", ",", 
                  RowBox[{"KempeChain1", "[", 
                   RowBox[{
                    RowBox[{"nbrs", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "4"}], "}"}], "\[RightDoubleBracket]"}],
                     ",", "cols"}], "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"KempeList", ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", "j", ",", " ", 
                   RowBox[{"StringForm", "[", 
                    RowBox[{
                    "\"\< Kempe chain for the 4 neighbors of vertex `` frees \
`` for vertex ``.\>\"", ",", 
                    RowBox[{"order", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "j"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"First", "[", 
                    RowBox[{"Complement", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", "4", "]"}], ",", 
                    RowBox[{
                    "fc", "\[LeftDoubleBracket]", "nbrs", 
                    "\[RightDoubleBracket]"}]}], "]"}], "]"}], "/.", " ", 
                    "colCode"}], ",", 
                    RowBox[{"order", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "j"}], "]"}], "]"}]}], "]"}]}], "}"}]}], 
                "]"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              StyleBox[
               RowBox[{"(*", " ", 
                RowBox[{
                "Now", " ", "we", " ", "are", " ", "in", " ", "the", " ", 
                 "case", " ", "that", " ", "the", " ", "vertex", " ", 
                 "degree", " ", "is", " ", "5", " ", "and", " ", "there", " ",
                  "are", " ", "four", " ", "colors", " ", "in", " ", "the", 
                 " ", "ring", " ", "with", " ", "one", " ", "repeat"}], " ", 
                "*)"}],
               FontWeight->"Plain"], "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"nbrsColors", "=", 
                RowBox[{
                "cols", "\[LeftDoubleBracket]", "nbrs", 
                 "\[RightDoubleBracket]"}]}], ";", 
               StyleBox[
                RowBox[{"(*", " ", 
                 RowBox[{
                 "find", " ", "the", " ", "colors", " ", "in", " ", "ring"}], 
                 " ", "*)"}],
                FontWeight->"Plain"], 
               StyleBox["\[IndentingNewLine]",
                FontWeight->"Plain"], 
               RowBox[{"dupColor", "=", 
                RowBox[{"First", "[", 
                 RowBox[{"Select", "[", 
                  RowBox[{"nbrsColors", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Count", "[", 
                    RowBox[{"nbrsColors", ",", "#1"}], "]"}], "\[Equal]", 
                    "2"}], "&"}], ",", "1"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"samecolorNbrs", "=", 
                RowBox[{"Select", "[", 
                 RowBox[{"nbrs", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "cols", "\[LeftDoubleBracket]", "#1", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "dupColor"}], 
                   "&"}], ",", "2"}], "]"}]}], ";", 
               RowBox[{"samecolorIndices", "=", 
                RowBox[{"Sort", "[", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"nbrs", ",", "#"}], "]"}], "&"}], ")"}], "/@", 
                   "samecolorNbrs"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "4"}], "}"}], ",", 
                   RowBox[{"Abs", "[", 
                    RowBox[{"Subtract", "@@", "samecolorIndices"}], "]"}]}], 
                  "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 StyleBox[
                  RowBox[{"(*", " ", 
                   RowBox[{
                   "The", " ", "preceding", " ", "If", " ", "gets", " ", "us",
                     " ", "first", " ", "to", " ", "the", " ", "case", " ", 
                    "that", " ", "the", " ", "duplicated", " ", "colors", " ",
                     "are", " ", "adjacent", " ", "in", " ", "the", " ", 
                    "ring"}], " ", "*)"}],
                  FontWeight->"Plain"], 
                 StyleBox["\[IndentingNewLine]",
                  FontWeight->"Plain"], 
                 RowBox[{
                  RowBox[{"v1", "=", 
                   RowBox[{"samecolorIndices", "/.", "\[InvisibleSpace]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "5"}], "}"}], "\[Rule]", "1"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"m_", ",", "n_"}], "}"}], "\[RuleDelayed]", 
                    "n"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"v3", "=", 
                   RowBox[{"First", "[", 
                    RowBox[{"DeleteCases", "[", 
                    RowBox[{"samecolorIndices", ",", "v1"}], "]"}], "]"}]}], 
                  ";", 
                  RowBox[{"v2", "=", 
                   RowBox[{"v1", "+", "2"}]}], ";", 
                  RowBox[{"fc1", "=", 
                   RowBox[{"KempeChain1", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"nbrs", "\[LeftDoubleBracket]", 
                    RowBox[{"Mod", "[", 
                    RowBox[{"v2", ",", "5", ",", "1"}], "]"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"nbrs", "\[LeftDoubleBracket]", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"v1", ",", "v3"}], "}"}], ",", "5", ",", "1"}], 
                    "]"}], "\[RightDoubleBracket]"}]}], "}"}], ",", "cols"}], 
                    "]"}]}], ";", 
                  RowBox[{"fc", "=", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"fc1", "=!=", "False"}], ",", "fc1", ",", 
                    RowBox[{"KempeChain1", "[", 
                    RowBox[{
                    RowBox[{"nbrs", "\[LeftDoubleBracket]", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"v1", "+", "1"}], ",", 
                    RowBox[{"v2", "+", "1"}]}], "}"}], ",", "5", ",", "1"}], 
                    "]"}], "\[RightDoubleBracket]"}], ",", "cols"}], "]"}]}], 
                    "]"}]}]}], ",", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 StyleBox[
                  RowBox[{"(*", " ", 
                   RowBox[{
                   "else", " ", "we", " ", "go", " ", "to", " ", "the", " ", 
                    "case", " ", "that", " ", "the", " ", "repeated", " ", 
                    "colors", " ", "are", " ", "split"}], " ", "*)"}],
                  FontWeight->"Plain"], 
                 RowBox[{
                  RowBox[{"v1", "=", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"samecolorIndices", "/.", "\[InvisibleSpace]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "4"}], "}"}], "\[Rule]", "1"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "5"}], "}"}], "\[Rule]", "2"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"m_", ",", "n_"}], "}"}], "\[RuleDelayed]", 
                    "n"}]}], "}"}]}], ")"}], "-", "1"}]}], ";", 
                  RowBox[{"v2", "=", 
                   RowBox[{"v1", "+", "2"}]}], ";", 
                  RowBox[{"fc1", "=", 
                   RowBox[{"KempeChain1", "[", 
                    RowBox[{
                    RowBox[{"nbrs", "\[LeftDoubleBracket]", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"v1", ",", "v2"}], "}"}], ",", "5", ",", "1"}], 
                    "]"}], "\[RightDoubleBracket]"}], ",", "cols"}], "]"}]}], 
                  ";", 
                  RowBox[{"fc", "=", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"fc1", "=!=", "False"}], ",", "fc1", ",", 
                    RowBox[{
                    RowBox[{"fc1", "=", 
                    RowBox[{"KempeChain1", "[", 
                    RowBox[{
                    RowBox[{"nbrs", "\[LeftDoubleBracket]", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"v1", ",", 
                    RowBox[{"v2", "+", "1"}]}], "}"}], ",", "5", ",", "1"}], 
                    "]"}], "\[RightDoubleBracket]"}], ",", "cols"}], "]"}]}], 
                    ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"fc1", "=!=", "False"}], ",", "fc1", ",", 
                    RowBox[{
                    RowBox[{"fc1", "=", 
                    RowBox[{"KempeChain1", "[", 
                    RowBox[{
                    RowBox[{"nbrs", "\[LeftDoubleBracket]", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"v1", "+", "1"}], ",", 
                    RowBox[{"v2", "+", "1"}]}], "}"}], ",", "5", ",", "1"}], 
                    "]"}], "\[RightDoubleBracket]"}], ",", "cols"}], "]"}]}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"fc1", "===", "False"}], ",", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"KempeList", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "j", ",", "j", ",", 
                    "\"\< Kempe chains tangled; the method failed to free a \
color for vertex 1.\>\""}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"partialcols", ",", " ", 
                    RowBox[{"partialcols", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], " ", "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"fc2", "=", 
                    RowBox[{"KempeChain1", "[", 
                    RowBox[{
                    RowBox[{"nbrs", "\[LeftDoubleBracket]", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"v1", "-", "1"}], ",", "v2"}], "}"}], ",", "5", 
                    ",", "1"}], "]"}], "\[RightDoubleBracket]"}], ",", 
                    "fc1"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"fc2", "=!=", "False"}], ",", "fc2", ",", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"KempeList", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "j", ",", "j", ",", 
                    "\"\< Kempe chains tangled; the method failed to free a \
color for vertex 1.\>\""}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"partialcols", ",", " ", 
                    RowBox[{"partialcols", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], " ", "]"}], ";", 
                    RowBox[{"Return", "[", "$Failed", "]"}]}]}], "]"}]}]}], 
                    "]"}]}]}], "]"}]}]}], "]"}]}]}]}], "]"}], ";", " ", 
               RowBox[{
                StyleBox["(*",
                 FontWeight->"Plain"], 
                StyleBox[" ",
                 FontWeight->"Plain"], 
                RowBox[{
                 StyleBox["End",
                  FontWeight->"Plain"], 
                 StyleBox[" ",
                  FontWeight->"Plain"], "If", 
                 StyleBox[" ",
                  FontWeight->"Plain"], 
                 StyleBox["for",
                  FontWeight->"Plain"], 
                 StyleBox[" ",
                  FontWeight->"Plain"], 
                 StyleBox["the",
                  FontWeight->"Plain"], 
                 StyleBox[" ",
                  FontWeight->"Plain"], 
                 StyleBox["2",
                  FontWeight->"Plain"], 
                 StyleBox[" ",
                  FontWeight->"Plain"], 
                 StyleBox["cases",
                  FontWeight->"Plain"]}], 
                StyleBox[" ",
                 FontWeight->"Plain"], 
                StyleBox["*)",
                 FontWeight->"Plain"]}], 
               StyleBox["\[IndentingNewLine]",
                FontWeight->"Plain"], 
               RowBox[{"AppendTo", "[", 
                RowBox[{"KempeList", ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", "j", ",", " ", 
                   RowBox[{"StringForm", "[", 
                    RowBox[{
                    "\"\< Kempe chain for the 5 neighbors of vertex `` frees \
`` for vertex ``.\>\"", ",", 
                    RowBox[{"order", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "j"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"First", "[", 
                    RowBox[{"Complement", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", "4", "]"}], ",", 
                    RowBox[{
                    "fc", "\[LeftDoubleBracket]", "nbrs", 
                    "\[RightDoubleBracket]"}]}], "]"}], "]"}], "/.", " ", 
                    "colCode"}], ",", 
                    RowBox[{"order", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "j"}], "]"}], "]"}]}], "]"}]}], "}"}]}], 
                "]"}]}]}], "]"}], ";", 
            RowBox[{
             StyleBox["(*",
              FontWeight->"Plain"], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             RowBox[{
              RowBox[{
               StyleBox["End",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], "If", 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["for",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["the",
                FontWeight->"Plain"], 
               StyleBox[" ",
                FontWeight->"Plain"], 
               StyleBox["degree",
                FontWeight->"Plain"]}], 
              StyleBox["-",
               FontWeight->"Plain"], 
              StyleBox[
               RowBox[{"4", " ", 
                RowBox[{"vs", ".", " ", "degree"}]}],
               FontWeight->"Plain"], 
              StyleBox["-",
               FontWeight->"Plain"], 
              StyleBox[
               RowBox[{"5", " ", "choice"}],
               FontWeight->"Plain"]}], 
             StyleBox[" ",
              FontWeight->"Plain"], 
             StyleBox["*)",
              FontWeight->"Plain"]}], 
            StyleBox["\[IndentingNewLine]",
             FontWeight->"Plain"], 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"fc", "=!=", "$Failed"}], ",", 
              RowBox[{"cols", "=", 
               RowBox[{"Flatten", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"First", "[", 
                   RowBox[{"Complement", "[", 
                    RowBox[{
                    RowBox[{"Range", "[", "4", "]"}], ",", 
                    RowBox[{
                    "fc", "\[LeftDoubleBracket]", "nbrs", 
                    "\[RightDoubleBracket]"}]}], "]"}], "]"}], ",", "fc"}], 
                 "}"}], "]"}]}]}], "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"partialcols", ",", 
           RowBox[{
            RowBox[{"PadLeft", "[", 
             RowBox[{"cols", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"g", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "5"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"InversePermutation", "[", "order", "]"}], "]"}], 
            "]"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"VV", "[", "g", "]"}]}], "}"}]}], "]"}], ";", 
      StyleBox[
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"Return", " ", "the", " ", "color", " ", "list"}], ",", " ", 
         
         RowBox[{
         "using", " ", "an", " ", "inverse", " ", "permutation", " ", "to", 
          " ", "match", " ", "the", " ", "\n", "  ", "original", " ", 
          "vertex", " ", "labels"}], ",", " ", 
         RowBox[{
         "as", " ", "opposed", " ", "to", " ", "the", " ", "Kempe", " ", 
          RowBox[{"ordering", "."}]}]}], " ", "*)"}],
       FontWeight->"Plain"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"fc", "===", "$Failed"}], ",", "$Failed", ",", 
        RowBox[{"cols", "\[LeftDoubleBracket]", 
         RowBox[{"InversePermutation", "[", "order", "]"}], 
         "\[RightDoubleBracket]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vertsSpec", "[", "_", "]"}], "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vertsSpec", "[", "20", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
    "8", ",", "18", ",", "11", ",", "6", ",", "19", ",", "14", ",", "10", ",",
      "2", ",", "13"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vertsSpec", "[", "15", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"10", ",", "12", ",", "5", ",", "4", ",", "15"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vertsSpec", "[", "15", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"9", ",", "1", ",", "11", ",", "6"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vertsSpec", "[", "10", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vertsSpec", "[", "5", "]"}], "=", 
   RowBox[{"{", "1", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vertsSpec", "[", "25", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
    "18", ",", "10", ",", "9", ",", "12", ",", "24", ",", "7", ",", "24", ",",
      "5", ",", "7", ",", "10", ",", "3", ",", "11", ",", "10", ",", "5", ",",
      "24", ",", "7", ",", "2", ",", "24", ",", "7", ",", "2", ",", "12", ",",
      "17", ",", "20"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"vertsSpec", "[", "30", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "20", ",", "10", ",", "1", ",", "17", ",", "3", ",", "14", ",",
       "21", ",", "19", ",", "4", ",", "10", ",", "19", ",", "5", ",", "6", 
      ",", "1", ",", "17", ",", "19", ",", "12", ",", "28", ",", "26", ",", 
      "12", ",", "28", ",", "1", ",", "17"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RandomPlanarGraphSpecial", "[", "n_", "]"}], " ", ":=", 
    RowBox[{"RandomPlanarGraphSpecialData", "[", 
     RowBox[{"[", 
      RowBox[{"n", "/", "5"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RandomPlanarGraphSpecialData", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PlanarGraph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "4"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "5"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "4"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "5"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"3", ",", "4"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"3", ",", "5"}], "}"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.63", ",", "0.64"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.75", ",", "0.99"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.88", ",", "0.37"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.8301", ",", "0.89"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.07", ",", "0.32"}], "}"}], "}"}]}], "}"}]}], "]"}], 
      ",", 
      RowBox[{"PlanarGraph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "4"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "5"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "8"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "9"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "6"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "7"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "10"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"3", ",", "5"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"3", ",", "7"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"3", ",", "8"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "5"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "9"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"5", ",", "7"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"5", ",", "9"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"5", ",", "10"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"6", ",", "8"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"6", ",", "9"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"6", ",", "10"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"7", ",", "10"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"8", ",", "9"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"9", ",", "10"}], "}"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.73", ",", "0.61"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.01", ",", "0.64"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.86", ",", "0.46"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.65", ",", "0.62"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.56", ",", "0.5"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.21", ",", "0.91"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.28", ",", "0.02"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.96", ",", "0.84"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.64", ",", "0.74"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.15", ",", "0.56"}], "}"}], "}"}]}], "}"}]}], "]"}], 
      ",", 
      RowBox[{"PlanarGraph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "4"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "6"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "8"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "13"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "14"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "15"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "3"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "4"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "7"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "11"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"3", ",", "4"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"3", ",", "8"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"3", ",", "14"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "6"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "8"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "11"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "13"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"5", ",", "9"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"5", ",", "10"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"5", ",", "14"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"5", ",", "15"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"6", ",", "8"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"7", ",", "11"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"7", ",", "12"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"8", ",", "14"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"9", ",", "10"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"9", ",", "13"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"9", ",", "15"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"10", ",", "12"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"10", ",", "13"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"11", ",", "12"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"11", ",", "13"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"12", ",", "13"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"13", ",", "15"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"14", ",", "15"}], "}"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.48", ",", "0.35003"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.07", ",", "0.86"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.05", ",", "0.26"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.22", ",", "0.56"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.91", ",", "0.02"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.31", ",", "0.41003"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.22", ",", "0.98"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.21", ",", "0.31"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.85", ",", "0.31"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.98", ",", "0.44"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.4", ",", "0.77"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.7001", ",", "0.9401"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.78", ",", "0.52"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.63", ",", "0.08"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.73", ",", "0.26"}], "}"}], "}"}]}], "}"}]}], "]"}], 
      ",", 
      RowBox[{"PlanarGraph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "8"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "9"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "16"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "17"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "3"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "4"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "8"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "10"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "16"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"3", ",", "7"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"3", ",", "8"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"3", ",", "9"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"3", ",", "10"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"3", ",", "14"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "6"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "10"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "15"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "16"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "20"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"5", ",", "11"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"5", ",", "13"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"5", ",", "16"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"5", ",", "17"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"5", ",", "19"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"6", ",", "11"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"6", ",", "12"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"6", ",", "13"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"6", ",", "15"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"6", ",", "16"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"7", ",", "11"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"7", ",", "12"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"7", ",", "14"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"7", ",", "18"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"7", ",", "19"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"8", ",", "9"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"8", ",", "16"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"10", ",", "14"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"10", ",", "20"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"11", ",", "12"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"11", ",", "13"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"11", ",", "19"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"12", ",", "15"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"12", ",", "18"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"12", ",", "20"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"13", ",", "16"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"14", ",", "18"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"14", ",", "20"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"15", ",", "20"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"16", ",", "17"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"17", ",", "19"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"18", ",", "20"}], "}"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.1", ",", "0.88"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.21", ",", "0.45"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.07", ",", "0.2"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.33", ",", "0.43"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.73", ",", "0.6901"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.52", ",", "0.54"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.99", ",", "0.03"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.1", ",", "0.59"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.86"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.34", ",", "0.28"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.74", ",", "0.52"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.68", ",", "0.44"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.55", ",", "0.63"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.54", ",", "0.21"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.55", ",", "0.43"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.19", ",", "0.77"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.8201", ",", "0.75"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.6901", ",", "0.25"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.8201", ",", "0.5"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.58", ",", "0.33"}], "}"}], "}"}]}], "}"}]}], "]"}], 
      ",", 
      RowBox[{"PlanarGraph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "6"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "8"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "17"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "20"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "23"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "7"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "12"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "15"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "24"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "25"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"3", ",", "4"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"3", ",", "7"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"3", ",", "9"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"3", ",", "12"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"3", ",", "16"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "7"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "10"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "11"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "16"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "18"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "23"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"5", ",", "7"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"5", ",", "10"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"5", ",", "14"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"5", ",", "15"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"5", ",", "22"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"6", ",", "8"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"6", ",", "11"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"6", ",", "13"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"6", ",", "17"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"6", ",", "18"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"6", ",", "20"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"7", ",", "10"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"7", ",", "12"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"7", ",", "15"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"7", ",", "24"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"8", ",", "13"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"8", ",", "17"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"9", ",", "12"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"9", ",", "16"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"9", ",", "21"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"10", ",", "11"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"10", ",", "22"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"11", ",", "13"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"11", ",", "18"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"11", ",", "22"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"12", ",", "21"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"12", ",", "25"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"13", ",", "22"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"14", ",", "15"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"14", ",", "22"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"14", ",", "25"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"15", ",", "24"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"15", ",", "25"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"16", ",", "19"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"16", ",", "21"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"16", ",", "23"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"18", ",", "20"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"18", ",", "23"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"19", ",", "21"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"19", ",", "23"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"20", ",", "23"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"21", ",", "25"}], "}"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.01", ",", "0.28"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.79", ",", "0.52"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.59", ",", "0.59"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.47003", ",", "0.42"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.77", ",", "0.26"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.28", ",", "0.25"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.7001", ",", "0.45"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.07", ",", "0.02"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.6", ",", "0.75"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.62", ",", "0.29"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.46", ",", "0.25"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.7001", ",", "0.66"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.39", ",", "0.03"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.9401", ",", "0.1"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.87", ",", "0.31"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.47003", ",", "0.67"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.12", ",", "0.18"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.3", ",", "0.42"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.29", ",", "0.76"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.21", ",", "0.41003"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.64", ",", "0.99"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.68", ",", "0.06"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.24", ",", "0.68"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.79", ",", "0.43"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.85", ",", "0.65"}], "}"}], "}"}]}], "}"}]}], "]"}], 
      ",", 
      RowBox[{"PlanarGraph", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "4"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "10"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "12"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "16"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "17"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "23"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "26"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"1", ",", "28"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "3"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "15"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "20"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "25"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "27"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "29"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"2", ",", "30"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"3", ",", "14"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"3", ",", "15"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"3", ",", "21"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"3", ",", "25"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "10"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "14"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "18"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"4", ",", "26"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"5", ",", "6"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"5", ",", "19"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"5", ",", "21"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"5", ",", "22"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"5", ",", "25"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"6", ",", "7"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"6", ",", "22"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"6", ",", "25"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"7", ",", "8"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"7", ",", "22"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"7", ",", "25"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"7", ",", "30"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"8", ",", "13"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"8", ",", "22"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"8", ",", "29"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"8", ",", "30"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"9", ",", "11"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"9", ",", "15"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"9", ",", "20"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"9", ",", "27"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"10", ",", "13"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"10", ",", "14"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"10", ",", "17"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"10", ",", "19"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"10", ",", "24"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"11", ",", "12"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"11", ",", "15"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"11", ",", "16"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"11", ",", "18"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"11", ",", "26"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"11", ",", "28"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"12", ",", "26"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"12", ",", "28"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"13", ",", "19"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"13", ",", "22"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"13", ",", "24"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"14", ",", "15"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"14", ",", "18"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"14", ",", "19"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"14", ",", "21"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"15", ",", "18"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"15", ",", "20"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"16", ",", "23"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"16", ",", "28"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"17", ",", "23"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"17", ",", "24"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"18", ",", "26"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"19", ",", "21"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"19", ",", "22"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"20", ",", "27"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"21", ",", "25"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"23", ",", "24"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"25", ",", "30"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"27", ",", "29"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"29", ",", "30"}], "}"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.34", ",", "0.31"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.56", ",", "0.8201"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.54", ",", "0.6901"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.37", ",", "0.46"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.72", ",", "0.58"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.76", ",", "0.61"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.84", ",", "0.64"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.9501", ",", "0.67"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.08", ",", "0.89"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.58", ",", "0.36"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.06", ",", "0.55"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.19", ",", "0.42"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.89", ",", "0.38"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.5", ",", "0.56"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.3", ",", "0.7001"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.09", ",", "0.16"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.55", ",", "0.21"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.29", ",", "0.58"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.6901", ",", "0.5"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.33", ",", "0.85"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.63", ",", "0.6"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.8301", ",", "0.52"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.55", ",", "0.07"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.72", ",", "0.1"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.66", ",", "0.6901"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.24", ",", "0.46"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.36", ",", "0.99"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.16", ",", "0.36"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.8301", ",", "0.84"}], "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0.79", ",", "0.75"}], "}"}], "}"}]}], "}"}]}], "]"}]}], 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fix", "[", 
     RowBox[{"g_", ",", "verts1_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"g1", "=", "g"}], "}"}], ",", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"g1", "=", 
          RowBox[{"PlanarGraph", "[", 
           RowBox[{
            RowBox[{"g1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"List", "/@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"vv", "==", "i"}], ",", 
                 RowBox[{"Mean", "[", 
                  RowBox[{"First", "/@", " ", 
                   RowBox[{"g1", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", " ", 
                    RowBox[{"Neighbors", "[", 
                    RowBox[{"g", ",", "i"}], "]"}]}], "]"}], "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"g1", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "i", ",", "1"}], "]"}], "]"}]}], "]"}], 
               ",", " ", 
               RowBox[{"{", 
                RowBox[{"i", ",", " ", 
                 RowBox[{"Length", "[", 
                  RowBox[{"g", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}]}], 
              "]"}]}]}], "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"vv", ",", " ", "verts1"}], "}"}]}], "]"}], ";", "g1"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "m_", "]"}], ":=", "m"}], " ", ";", "  ", 
  RowBox[{
   RowBox[{"f", "[", "x_String", "]"}], "=", "17"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4888399200108232`*^9, 3.488839945462267*^9}, {
   3.488888824753251*^9, 3.488888829894978*^9}, 3.488970503077128*^9, 
   3.4889705412371073`*^9, {3.4889706571468678`*^9, 3.48897066178547*^9}, {
   3.4889707623095903`*^9, 3.4889707638150377`*^9}, {3.488970794376319*^9, 
   3.4889708119800987`*^9}, {3.488984979915045*^9, 3.488984991020935*^9}, {
   3.488985197901238*^9, 3.488985270671315*^9}, {3.488985303443581*^9, 
   3.488985303649988*^9}, {3.4889857455529747`*^9, 3.488985748526649*^9}, {
   3.4889857810805283`*^9, 3.488985785158518*^9}, {3.4889858175727797`*^9, 
   3.4889858785656567`*^9}, {3.488985915092784*^9, 3.488985922972824*^9}, {
   3.4889859848404627`*^9, 3.4889860111562*^9}, 3.4889860441156483`*^9, {
   3.488986314329307*^9, 3.488986321348394*^9}, {3.488988194226437*^9, 
   3.488988232875247*^9}, {3.488988296167039*^9, 3.48898829845312*^9}, {
   3.488988347384754*^9, 3.488988440391077*^9}, {3.488988586900094*^9, 
   3.4889885902025948`*^9}, {3.488988767186082*^9, 3.488988789095489*^9}, {
   3.488989146673768*^9, 3.48898925252524*^9}, 3.488989310394082*^9, {
   3.4890561833899717`*^9, 3.489056186214082*^9}, {3.489056569205009*^9, 
   3.489056570010858*^9}, {3.4890566921046658`*^9, 3.489056718133881*^9}, {
   3.489056810921578*^9, 3.48905681814697*^9}, {3.489056941705022*^9, 
   3.489056964583932*^9}, {3.489057001595518*^9, 3.489057096963889*^9}, {
   3.48905715398134*^9, 3.489057189339613*^9}, 3.489075999034337*^9, {
   3.489076066894435*^9, 3.489076107282803*^9}, {3.489076303003189*^9, 
   3.489076304049349*^9}, {3.48907668975762*^9, 3.489076694000011*^9}, {
   3.489076770408265*^9, 3.489076773475007*^9}, {3.4890770709198647`*^9, 
   3.4890770744990463`*^9}, {3.489077604650443*^9, 3.4890776076272163`*^9}, {
   3.489077746289554*^9, 3.489077756854437*^9}, {3.489077942645235*^9, 
   3.489077956099018*^9}, {3.489078606246648*^9, 3.489078606531745*^9}, {
   3.4890786803777027`*^9, 3.489078681279862*^9}, {3.4890814079610147`*^9, 
   3.489081408532613*^9}, {3.489081773628257*^9, 3.4890817778224573`*^9}, {
   3.489081842073941*^9, 3.489081842464226*^9}, 3.489081903625041*^9, 
   3.4890819607602377`*^9, {3.48915210842907*^9, 3.489152114102066*^9}, {
   3.489165677288128*^9, 3.489165681973013*^9}, {3.4891662338226337`*^9, 
   3.489166234154168*^9}, {3.4891662728354263`*^9, 3.489166305611331*^9}, 
   3.489167337511519*^9, {3.489167505170403*^9, 3.489167511225214*^9}, {
   3.489167593500496*^9, 3.489167607707055*^9}, {3.4891676556756477`*^9, 
   3.4891676577282867`*^9}, {3.4891678648696623`*^9, 3.489167865942788*^9}, {
   3.48918400422616*^9, 3.489184004370854*^9}, {3.489184567577449*^9, 
   3.4891845803161573`*^9}, {3.489184625961548*^9, 3.489184774090034*^9}, {
   3.489184827550806*^9, 3.4891848567408524`*^9}, {3.4891849083293447`*^9, 
   3.489184968727726*^9}, {3.489185036269101*^9, 3.489185093388279*^9}, {
   3.489185137150154*^9, 3.4891851696490793`*^9}, 3.489185307018077*^9, {
   3.489185599343417*^9, 3.4891856245692873`*^9}, {3.4893524027358685`*^9, 
   3.4893524669706545`*^9}},
 CellID->1156567507],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"!", 
        RowBox[{"IntegerQ", "[", "ii", "]"}]}], "||", 
       RowBox[{"ii", ">", 
        RowBox[{"f", "[", "type", "]"}]}]}], ",", " ", 
      RowBox[{"ii", "=", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"g", "=", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"IntegerQ", "[", "type", "]"}], ",", 
       RowBox[{
        RowBox[{"n", "=", "type"}], ";", 
        RowBox[{"RandomPlanarGraphSpecial", "[", "n", "]"}]}], ",", " ", 
       RowBox[{"type", "\[Equal]", "\"\<KC\>\""}], ",", 
       RowBox[{
        RowBox[{"n", "=", "17"}], ";", " ", "ErreraGraphSW"}], ",", " ", 
       RowBox[{"type", "\[Equal]", "\"\<KCP\>\""}], ",", 
       RowBox[{
        RowBox[{"n", "=", "17"}], ";", " ", "ErreraGraphSWP"}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"kk", "=", 
     RowBox[{"KempeOrder1", "[", "g", "]"}]}], ";", 
    RowBox[{"FourColoring1", "[", "g", "]"}], ";", "\n", 
    RowBox[{"Pane", "[", 
     RowBox[{
      RowBox[{"Column", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Text", "@", " ", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"KempeList", "[", 
             RowBox[{"[", 
              RowBox[{"ii", ",", "3"}], "]"}], "]"}], ",", "14"}], "]"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"ii", "<", 
            RowBox[{"f", "[", "type", "]"}]}], ",", 
           RowBox[{"Text", "@", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"KempeList", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"ii", "+", "1"}], ",", "3"}], "]"}], "]"}], ",", 
              "14"}], "]"}]}], ",", 
           RowBox[{"Text", "@", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"KempeList", "[", 
               RowBox[{"[", 
                RowBox[{"ii", ",", "3"}], "]"}], "]"}], ",", "14", ",", " ", 
              "White"}], "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Show", "[", 
          RowBox[{
           RowBox[{"ShowPlanarGraph", "[", 
            RowBox[{"g", ",", 
             RowBox[{"partialcols", "[", 
              RowBox[{"[", "ii", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Lighter", "@", 
                RowBox[{
                 RowBox[{"ColorData", "[", "\"\<Legacy\>\"", "]"}], "[", 
                 "\"\<RoseMadder\>\"", "]"}]}], ",", " ", 
               RowBox[{"Lighter", "@", 
                RowBox[{
                 RowBox[{"ColorData", "[", "\"\<Legacy\>\"", "]"}], "[", 
                 "\"\<EmeraldGreen\>\"", "]"}]}], ",", 
               RowBox[{"Lighter", "@", 
                RowBox[{
                 RowBox[{"ColorData", "[", "\"\<Legacy\>\"", "]"}], "[", 
                 "\"\<DodgerBlue\>\"", "]"}]}], ",", " ", 
               RowBox[{"Lighter", "@", 
                RowBox[{
                 RowBox[{"ColorData", "[", "\"\<Legacy\>\"", "]"}], "[", 
                 "\"\<Gold\>\"", "]"}]}], ",", " ", 
               RowBox[{"GrayLevel", "[", "1", "]"}], ",", " ", "Black"}], 
              "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"Epilog", " ", "\[Rule]", " ", 
              RowBox[{"{", 
               RowBox[{"MapIndexed", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "11", ",", " ", 
                    "Bold", ",", " ", "Black"}], "]"}], ",", " ", "#1"}], 
                   "]"}], "&"}], ",", " ", 
                 RowBox[{"First", "/@", " ", 
                  RowBox[{"g", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "}"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Prolog", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"GrayLevel", "[", "0.2", "]"}], ",", 
                 RowBox[{"PointSize", "[", "0.048", "]"}], ",", 
                 "\[IndentingNewLine]", " ", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"ii", "<", 
                    RowBox[{"Length", "[", 
                    RowBox[{"g", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", 
                   RowBox[{"Disk", "[", 
                    RowBox[{
                    RowBox[{"g", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", 
                    RowBox[{"kk", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"g", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "+", "1", "-", 
                    "ii"}], "]"}], "]"}], ",", "1"}], "]"}], "]"}], ",", 
                    "0.031"}], " ", "]"}], ",", 
                   RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
                 "Black", ",", " ", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"ii", "<", 
                    RowBox[{"Length", "[", 
                    RowBox[{"g", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", 
                   RowBox[{"Disk", "[", 
                    RowBox[{
                    RowBox[{"g", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", 
                    RowBox[{"kk", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"g", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "+", "1", "-", 
                    "ii", "-", "1"}], "]"}], "]"}], ",", "1"}], "]"}], "]"}], 
                    ",", "0.031"}], " ", "]"}], ",", 
                   RowBox[{"{", "}"}]}], "]"}]}], "}"}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "380"}], ",", 
             RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
             RowBox[{"PlotRangePadding", "\[Rule]", "0.03"}], ",", 
             RowBox[{"FrameTicks", "\[Rule]", 
              RowBox[{"!", "True"}]}], ",", " ", 
             RowBox[{"PlotLabel", "\[Rule]", "None"}]}], "]"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}], "}"}], 
       "]"}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"450", ",", "440"}], "}"}]}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"type", ",", "30", ",", " ", "\"\<graph\>\""}], "}"}], ",", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"5", "\[Rule]", "\"\<5 vertices\>\""}], ",", 
         RowBox[{"10", "\[Rule]", "\"\<10 vertices\>\""}], ",", 
         RowBox[{"15", "\[Rule]", "\"\<15 vertices\>\""}], ",", 
         RowBox[{"20", "\[Rule]", "\"\<20 vertices\>\""}], ",", 
         RowBox[{"25", "\[Rule]", "\"\<25 vertices\>\""}], ",", 
         RowBox[{"30", "\[Rule]", "\"\<30 vertices\>\""}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<KC\>\"", "\[Rule]", "\"\<Kempe counterexample\>\""}], 
         ",", 
         RowBox[{
         "\"\<KCP\>\"", "\[Rule]", "\"\<permuted counterexample\>\""}]}], 
        "}"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ii", ",", "1", ",", " ", "\"\<algorithm step\>\""}], "}"}], 
     ",", " ", "1", ",", 
     RowBox[{"f", "[", "type", "]"}], ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", " ", 
   
   RowBox[{"TrackedSymbols", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.35696210375764*^9, 3.489081818154642*^9, {3.4890912584635763`*^9, 
   3.489091313246435*^9}, {3.489091383953705*^9, 3.489091429600729*^9}, {
   3.489091503347711*^9, 3.489091505371005*^9}, {3.489091547586727*^9, 
   3.489091639322589*^9}, {3.489091669513276*^9, 3.489091729632493*^9}, 
   3.489091778796459*^9, {3.489091831424498*^9, 3.489091833229738*^9}, {
   3.489091865224935*^9, 3.48909189309534*^9}, {3.489091929405287*^9, 
   3.4890920789205713`*^9}, 3.4890921260150347`*^9, 3.489092182158855*^9, {
   3.489092250053444*^9, 3.489092301638505*^9}, {3.489092817581986*^9, 
   3.48909282938525*^9}, {3.489093036370142*^9, 3.489093059766967*^9}, 
   3.4890939977741337`*^9, 3.489143200664711*^9, {3.489143517756969*^9, 
   3.489143518075403*^9}, {3.489143586684185*^9, 3.489143616957712*^9}, {
   3.4891436567819967`*^9, 3.489143703454116*^9}, {3.4891474870040617`*^9, 
   3.4891475162948103`*^9}, {3.4891476782845287`*^9, 3.489147678436694*^9}, {
   3.489147872225868*^9, 3.4891479224503603`*^9}, {3.4891480125995207`*^9, 
   3.489148074923139*^9}, 3.489150764086038*^9, {3.48915081111305*^9, 
   3.489150876741881*^9}, {3.48916556737488*^9, 3.48916562124627*^9}, {
   3.489165722584923*^9, 3.48916575976219*^9}, {3.489166937719846*^9, 
   3.489166948719631*^9}, {3.4891670086069736`*^9, 3.4891670188472147`*^9}, 
   3.4891671722522507`*^9, {3.489167258680132*^9, 3.489167264059202*^9}, {
   3.489167295595454*^9, 3.4891672980714903`*^9}, {3.489167342875411*^9, 
   3.489167454047616*^9}, {3.4891679089282303`*^9, 3.4891679115007343`*^9}, 
   3.4891838928832283`*^9, {3.48918402491094*^9, 3.489184032092328*^9}, {
   3.4891845437059937`*^9, 3.489184546473865*^9}, {3.489184604830104*^9, 
   3.4891846131574183`*^9}, 3.4891846718187103`*^9, {3.4891853622496433`*^9, 
   3.489185451648479*^9}, {3.4892574176592627`*^9, 3.4892574756110573`*^9}, {
   3.48925758884438*^9, 3.489257607984294*^9}, {3.489352036921027*^9, 
   3.4893520706399927`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ii$$ = 1, $CellContext`type$$ = 30, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`type$$], 30, "graph"}, {
      5 -> "5 vertices", 10 -> "10 vertices", 15 -> "15 vertices", 20 -> 
       "20 vertices", 25 -> "25 vertices", 30 -> "30 vertices", "KC" -> 
       "Kempe counterexample", "KCP" -> "permuted counterexample"}}, {{
       Hold[$CellContext`ii$$], 1, "algorithm step"}, 1, 
      Dynamic[
       $CellContext`f[$CellContext`type$$]], 1}}, Typeset`size$$ = {
    450., {217.34375, 222.65625}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`type$792$$ = 
    False, $CellContext`ii$793$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`ii$$ = 1, $CellContext`type$$ = 30}, 
      "ControllerVariables" :> {
        Hold[$CellContext`type$$, $CellContext`type$792$$, False], 
        Hold[$CellContext`ii$$, $CellContext`ii$793$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> (If[
         Or[
          Not[
           
           IntegerQ[$CellContext`ii$$]], $CellContext`ii$$ > \
$CellContext`f[$CellContext`type$$]], $CellContext`ii$$ = 1]; $CellContext`g = 
        Which[
          
          IntegerQ[$CellContext`type$$], $CellContext`n = $CellContext`type$$; \
$CellContext`RandomPlanarGraphSpecial[$CellContext`n], $CellContext`type$$ == 
          "KC", $CellContext`n = 
           17; $CellContext`ErreraGraphSW, $CellContext`type$$ == 
          "KCP", $CellContext`n = 
           17; $CellContext`ErreraGraphSWP]; $CellContext`kk = \
$CellContext`KempeOrder1[$CellContext`g]; \
$CellContext`FourColoring1[$CellContext`g]; Pane[
         Column[{
           Text[
            Style[
             Part[$CellContext`KempeList, $CellContext`ii$$, 3], 14]], 
           If[$CellContext`ii$$ < $CellContext`f[$CellContext`type$$], 
            Text[
             Style[
              Part[$CellContext`KempeList, $CellContext`ii$$ + 1, 3], 14]], 
            Text[
             Style[
              Part[$CellContext`KempeList, $CellContext`ii$$, 3], 14, 
              White]]], 
           Show[
            $CellContext`ShowPlanarGraph[$CellContext`g, 
             Part[$CellContext`partialcols, $CellContext`ii$$], {
              Lighter[
               ColorData["Legacy"]["RoseMadder"]], 
              Lighter[
               ColorData["Legacy"]["EmeraldGreen"]], 
              Lighter[
               ColorData["Legacy"]["DodgerBlue"]], 
              Lighter[
               ColorData["Legacy"]["Gold"]], 
              GrayLevel[1], Black}, Epilog -> {
               MapIndexed[Text[
                 Style[
                  Part[#2, 1], 11, Bold, Black], #]& , 
                Map[First, 
                 Part[$CellContext`g, 2]]]}, Prolog -> {{
                GrayLevel[0.2], 
                PointSize[0.048], 
                If[$CellContext`ii$$ < Length[
                   Part[$CellContext`g, 2]], 
                 Disk[
                  Part[$CellContext`g, 2, 
                   Part[$CellContext`kk, Length[
                    Part[$CellContext`g, 2]] + 1 - $CellContext`ii$$], 1], 
                  0.031], {}], Black, 
                If[$CellContext`ii$$ < Length[
                   Part[$CellContext`g, 2]], 
                 Disk[
                  Part[$CellContext`g, 2, 
                   Part[$CellContext`kk, Length[
                    Part[$CellContext`g, 2]] + 1 - $CellContext`ii$$ - 1], 1],
                   0.031], {}]}}, ImageSize -> 380, AspectRatio -> Automatic, 
             PlotRangePadding -> 0.03, FrameTicks -> Not[True], PlotLabel -> 
             None], AspectRatio -> Automatic]}], ImageSize -> {450, 440}]), 
      "Specifications" :> {{{$CellContext`type$$, 30, "graph"}, {
         5 -> "5 vertices", 10 -> "10 vertices", 15 -> "15 vertices", 20 -> 
          "20 vertices", 25 -> "25 vertices", 30 -> "30 vertices", "KC" -> 
          "Kempe counterexample", "KCP" -> 
          "permuted counterexample"}}, {{$CellContext`ii$$, 1, 
          "algorithm step"}, 1, 
         Dynamic[
          $CellContext`f[$CellContext`type$$]], 1, Appearance -> "Labeled"}}, 
      "Options" :> {TrackedSymbols -> True}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{495., {275., 280.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(({$CellContext`f[
          Pattern[$CellContext`x, 
           Blank[String]]] = 17, $CellContext`f[
          Pattern[$CellContext`m, 
           
           Blank[]]] := $CellContext`m, $CellContext`g = \
$CellContext`PlanarGraph[{{{1, 4}}, {{1, 10}}, {{1, 12}}, {{1, 16}}, {{1, 
          17}}, {{1, 23}}, {{1, 26}}, {{1, 28}}, {{2, 3}}, {{2, 15}}, {{2, 
          20}}, {{2, 25}}, {{2, 27}}, {{2, 29}}, {{2, 30}}, {{3, 14}}, {{3, 
          15}}, {{3, 21}}, {{3, 25}}, {{4, 10}}, {{4, 14}}, {{4, 18}}, {{4, 
          26}}, {{5, 6}}, {{5, 19}}, {{5, 21}}, {{5, 22}}, {{5, 25}}, {{6, 
          7}}, {{6, 22}}, {{6, 25}}, {{7, 8}}, {{7, 22}}, {{7, 25}}, {{7, 
          30}}, {{8, 13}}, {{8, 22}}, {{8, 29}}, {{8, 30}}, {{9, 11}}, {{9, 
          15}}, {{9, 20}}, {{9, 27}}, {{10, 13}}, {{10, 14}}, {{10, 17}}, {{
          10, 19}}, {{10, 24}}, {{11, 12}}, {{11, 15}}, {{11, 16}}, {{11, 
          18}}, {{11, 26}}, {{11, 28}}, {{12, 26}}, {{12, 28}}, {{13, 19}}, {{
          13, 22}}, {{13, 24}}, {{14, 15}}, {{14, 18}}, {{14, 19}}, {{14, 
          21}}, {{15, 18}}, {{15, 20}}, {{16, 23}}, {{16, 28}}, {{17, 23}}, {{
          17, 24}}, {{18, 26}}, {{19, 21}}, {{19, 22}}, {{20, 27}}, {{21, 
          25}}, {{23, 24}}, {{25, 30}}, {{27, 29}}, {{29, 
          30}}}, CompressedData["
1:eJxTTMoPSmVmYGCQA2JGIGYC4sNfNWL6D121v764wJbr+mX7N4E75FpfP7RX
SH4X5WT3yt7jYZXIOveH9t/Z4mf4iD6zB7KBAtftC4GqFxfctecCa3xu338I
ZNAj+yCQ9sAX9kACyHpsD9H+yr4aRFU9sffYXytrkf4Oqv8pVHwLlH4DNwdi
7nV7sHE71tnPmgkCD6Hmn4CaewuuDyJ+w54BDB7A/WEMBpeh9j6Dmrsdqu8I
3FyIeaeg9l+CuwPmb5i58mCPXYWa+9peMwak8gmU/9i+UJr3ge6EV/ZLQK5f
/ABuPsQ9G+HhBRHfCTXvKdweiH/PoYXvdWi4v4e7GyYOsw8WzpD4egl17wt7
ABb544E=
          "]], $CellContext`n = 
        30, $CellContext`RandomPlanarGraphSpecial[
          Pattern[$CellContext`n, 
           Blank[]]] := 
        Part[$CellContext`RandomPlanarGraphSpecialData, $CellContext`n/
          5], $CellContext`RandomPlanarGraphSpecialData = {
          $CellContext`PlanarGraph[{{{1, 2}}, {{1, 3}}, {{1, 4}}, {{1, 5}}, {{
           2, 4}}, {{2, 5}}, {{3, 4}}, {{3, 5}}}, {{{0.63, 0.64}}, {{0.75, 
           0.99}}, {{0.88, 0.37}}, {{0.8301, 0.89}}, {{0.07, 0.32}}}], 
          $CellContext`PlanarGraph[{{{1, 3}}, {{1, 4}}, {{1, 5}}, {{1, 8}}, {{
           1, 9}}, {{2, 6}}, {{2, 7}}, {{2, 10}}, {{3, 5}}, {{3, 7}}, {{3, 
           8}}, {{4, 5}}, {{4, 9}}, {{5, 7}}, {{5, 9}}, {{5, 10}}, {{6, 
           8}}, {{6, 9}}, {{6, 10}}, {{7, 10}}, {{8, 9}}, {{9, 10}}}, {{{0.73,
            0.61}}, {{0.01, 0.64}}, {{0.86, 0.46}}, {{0.65, 0.62}}, {{0.56, 
           0.5}}, {{0.21, 0.91}}, {{0.28, 0.02}}, {{0.96, 0.84}}, {{0.64, 
           0.74}}, {{0.15, 0.56}}}], 
          $CellContext`PlanarGraph[{{{1, 4}}, {{1, 6}}, {{1, 8}}, {{1, 
           13}}, {{1, 14}}, {{1, 15}}, {{2, 3}}, {{2, 4}}, {{2, 7}}, {{2, 
           11}}, {{3, 4}}, {{3, 8}}, {{3, 14}}, {{4, 6}}, {{4, 8}}, {{4, 
           11}}, {{4, 13}}, {{5, 9}}, {{5, 10}}, {{5, 14}}, {{5, 15}}, {{6, 
           8}}, {{7, 11}}, {{7, 12}}, {{8, 14}}, {{9, 10}}, {{9, 13}}, {{9, 
           15}}, {{10, 12}}, {{10, 13}}, {{11, 12}}, {{11, 13}}, {{12, 
           13}}, {{13, 15}}, {{14, 15}}}, {{{0.48, 0.35003}}, {{0.07, 
           0.86}}, {{0.05, 0.26}}, {{0.22, 0.56}}, {{0.91, 0.02}}, {{0.31, 
           0.41003}}, {{0.22, 0.98}}, {{0.21, 0.31}}, {{0.85, 0.31}}, {{0.98, 
           0.44}}, {{0.4, 0.77}}, {{0.7001, 0.9401}}, {{0.78, 0.52}}, {{0.63, 
           0.08}}, {{0.73, 0.26}}}], 
          $CellContext`PlanarGraph[{{{1, 8}}, {{1, 9}}, {{1, 16}}, {{1, 
           17}}, {{2, 3}}, {{2, 4}}, {{2, 8}}, {{2, 10}}, {{2, 16}}, {{3, 
           7}}, {{3, 8}}, {{3, 9}}, {{3, 10}}, {{3, 14}}, {{4, 6}}, {{4, 
           10}}, {{4, 15}}, {{4, 16}}, {{4, 20}}, {{5, 11}}, {{5, 13}}, {{5, 
           16}}, {{5, 17}}, {{5, 19}}, {{6, 11}}, {{6, 12}}, {{6, 13}}, {{6, 
           15}}, {{6, 16}}, {{7, 11}}, {{7, 12}}, {{7, 14}}, {{7, 18}}, {{7, 
           19}}, {{8, 9}}, {{8, 16}}, {{10, 14}}, {{10, 20}}, {{11, 12}}, {{
           11, 13}}, {{11, 19}}, {{12, 15}}, {{12, 18}}, {{12, 20}}, {{13, 
           16}}, {{14, 18}}, {{14, 20}}, {{15, 20}}, {{16, 17}}, {{17, 
           19}}, {{18, 
           20}}}, {{{0.1, 0.88}}, {{0.21, 0.45}}, {{0.07, 0.2}}, {{0.33, 
            0.43}}, {{0.73, 0.6901}}, {{0.52, 0.54}}, {{0.99, 0.03}}, {{0.1, 
            0.59}}, {{0, 0.86}}, {{0.34, 0.28}}, {{0.74, 0.52}}, {{0.68, 
            0.44}}, {{0.55, 0.63}}, {{0.54, 0.21}}, {{0.55, 0.43}}, {{0.19, 
            0.77}}, {{0.8201, 0.75}}, {{0.6901, 0.25}}, {{0.8201, 0.5}}, {{
            0.58, 0.33}}}], 
          $CellContext`PlanarGraph[{{{1, 6}}, {{1, 8}}, {{1, 17}}, {{1, 
           20}}, {{1, 23}}, {{2, 7}}, {{2, 12}}, {{2, 15}}, {{2, 24}}, {{2, 
           25}}, {{3, 4}}, {{3, 7}}, {{3, 9}}, {{3, 12}}, {{3, 16}}, {{4, 
           7}}, {{4, 10}}, {{4, 11}}, {{4, 16}}, {{4, 18}}, {{4, 23}}, {{5, 
           7}}, {{5, 10}}, {{5, 14}}, {{5, 15}}, {{5, 22}}, {{6, 8}}, {{6, 
           11}}, {{6, 13}}, {{6, 17}}, {{6, 18}}, {{6, 20}}, {{7, 10}}, {{7, 
           12}}, {{7, 15}}, {{7, 24}}, {{8, 13}}, {{8, 17}}, {{9, 12}}, {{9, 
           16}}, {{9, 21}}, {{10, 11}}, {{10, 22}}, {{11, 13}}, {{11, 18}}, {{
           11, 22}}, {{12, 21}}, {{12, 25}}, {{13, 22}}, {{14, 15}}, {{14, 
           22}}, {{14, 25}}, {{15, 24}}, {{15, 25}}, {{16, 19}}, {{16, 
           21}}, {{16, 23}}, {{18, 20}}, {{18, 23}}, {{19, 21}}, {{19, 
           23}}, {{20, 23}}, {{21, 25}}}, CompressedData["
1:eJxTTMoPSmVmYGCQBGJGIGYC4mqRde4Pq1rs3wTukGt9fdHe42EVUOSl/ZIC
W67rix/Yg7kPH8HpzMcdW3+I3IPyb0HVvYDSF+DmMIDBBXuP/bWyFunP7M+e
AYE7UPmN9hB7p9gbg8FjqPoX9tcXgwx6bN9/6KtGTP8l+0KQsQV3McyTb30N
NOmp/TegqkNfb9iDTA3cMc/+O1v8DB/Rd/azZoLATqh5r6H0Zbj7IeY+herb
Z88FVnAc6p7LcP/B3BEEVvgCKn7KfpK9RMU721tQfzyxB5Ei697bHwYpPwQz
dx2UPgcXh4Uv2Pmtt6H2vYaGzxN7ACefxa8=
           "]], 
          $CellContext`PlanarGraph[{{{1, 4}}, {{1, 10}}, {{1, 12}}, {{1, 
           16}}, {{1, 17}}, {{1, 23}}, {{1, 26}}, {{1, 28}}, {{2, 3}}, {{2, 
           15}}, {{2, 20}}, {{2, 25}}, {{2, 27}}, {{2, 29}}, {{2, 30}}, {{3, 
           14}}, {{3, 15}}, {{3, 21}}, {{3, 25}}, {{4, 10}}, {{4, 14}}, {{4, 
           18}}, {{4, 26}}, {{5, 6}}, {{5, 19}}, {{5, 21}}, {{5, 22}}, {{5, 
           25}}, {{6, 7}}, {{6, 22}}, {{6, 25}}, {{7, 8}}, {{7, 22}}, {{7, 
           25}}, {{7, 30}}, {{8, 13}}, {{8, 22}}, {{8, 29}}, {{8, 30}}, {{9, 
           11}}, {{9, 15}}, {{9, 20}}, {{9, 27}}, {{10, 13}}, {{10, 14}}, {{
           10, 17}}, {{10, 19}}, {{10, 24}}, {{11, 12}}, {{11, 15}}, {{11, 
           16}}, {{11, 18}}, {{11, 26}}, {{11, 28}}, {{12, 26}}, {{12, 
           28}}, {{13, 19}}, {{13, 22}}, {{13, 24}}, {{14, 15}}, {{14, 
           18}}, {{14, 19}}, {{14, 21}}, {{15, 18}}, {{15, 20}}, {{16, 
           23}}, {{16, 28}}, {{17, 23}}, {{17, 24}}, {{18, 26}}, {{19, 
           21}}, {{19, 22}}, {{20, 27}}, {{21, 25}}, {{23, 24}}, {{25, 
           30}}, {{27, 29}}, {{29, 30}}}, CompressedData["
1:eJxTTMoPSmVmYGCQA2JGIGYC4sNfNWL6D121v764wJbr+mX7N4E75FpfP7RX
SH4X5WT3yt7jYZXIOveH9t/Z4mf4iD6zB7KBAtftC4GqFxfctecCa3xu338I
ZNAj+yCQ9sAX9kACyHpsD9H+yr4aRFU9sffYXytrkf4Oqv8pVHwLlH4DNwdi
7nV7sHE71tnPmgkCD6Hmn4CaewuuDyJ+w54BDB7A/WEMBpeh9j6Dmrsdqu8I
3FyIeaeg9l+CuwPmb5i58mCPXYWa+9peMwak8gmU/9i+UJr3ge6EV/ZLQK5f
/ABuPsQ9G+HhBRHfCTXvKdweiH/PoYXvdWi4v4e7GyYOsw8WzpD4egl17wt7
ABb544E=
           
           "]]}, $CellContext`ErreraGraphSW = $CellContext`PlanarGraph[{{{1, 
          3}}, {{1, 5}}, {{1, 10}}, {{1, 12}}, {{1, 17}}, {{2, 8}}, {{2, 
          9}}, {{2, 13}}, {{2, 14}}, {{2, 15}}, {{3, 5}}, {{3, 10}}, {{3, 
          11}}, {{3, 15}}, {{4, 6}}, {{4, 8}}, {{4, 11}}, {{4, 13}}, {{4, 
          16}}, {{5, 11}}, {{5, 12}}, {{5, 16}}, {{6, 7}}, {{6, 13}}, {{6, 
          14}}, {{6, 16}}, {{7, 9}}, {{7, 12}}, {{7, 14}}, {{7, 16}}, {{7, 
          17}}, {{8, 11}}, {{8, 13}}, {{8, 15}}, {{9, 10}}, {{9, 14}}, {{9, 
          15}}, {{9, 17}}, {{10, 15}}, {{10, 17}}, {{11, 15}}, {{11, 16}}, {{
          12, 16}}, {{12, 17}}, {{13, 
          14}}}, {{{0.5476190476190476, 13/15}}, {{
            0.5476190476190476, 2/5}}, {{0.34761904761904766`, 1/3}}, {{
           0.4523809523809524, 
           0.14666666666666667`}}, {{0.07142857142857141, (-1)/15}}, {{
           0.6428571428571429, 0.14666666666666667`}}, {{0.8095238095238095, 
           0.10666666666666667`}}, {{0.48571428571428577`, 1/3}}, {{
           0.5857142857142857, 0.52}}, {{0.5476190476190476, 
           0.6933333333333334}}, {{0.28571428571428575`, 
           0.10666666666666667`}}, {{1.023809523809524, (-1)/15}}, {{
           0.5476190476190476, 0.24}}, {{0.6095238095238095, 1/3}}, {{
           0.5095238095238096, 0.52}}, {{0.5476190476190476, 
           0.02}}, {{
            0.7428571428571429, 1/
             3}}}], $CellContext`ErreraGraphSWP = $CellContext`PlanarGraph[{{{
          2, 6}}, {{2, 15}}, {{2, 16}}, {{2, 12}}, {{2, 11}}, {{3, 10}}, {{3, 
          8}}, {{3, 4}}, {{3, 13}}, {{3, 7}}, {{6, 15}}, {{6, 16}}, {{6, 
          14}}, {{6, 7}}, {{9, 1}}, {{9, 10}}, {{9, 14}}, {{9, 4}}, {{9, 
          5}}, {{15, 14}}, {{15, 12}}, {{15, 5}}, {{1, 17}}, {{1, 4}}, {{1, 
          13}}, {{1, 5}}, {{17, 8}}, {{17, 12}}, {{17, 13}}, {{17, 5}}, {{17, 
          11}}, {{10, 14}}, {{10, 4}}, {{10, 7}}, {{8, 16}}, {{8, 13}}, {{8, 
          7}}, {{8, 11}}, {{16, 7}}, {{16, 11}}, {{14, 7}}, {{14, 5}}, {{12, 
          5}}, {{12, 11}}, {{4, 
          13}}}, {{{0.6428571428571429, 
           0.14666666666666667`}}, {{0.5476190476190476, 13/15}}, {{
            0.5476190476190476, 2/5}}, {{0.5476190476190476, 0.24}}, {{
           0.5476190476190476, 0.02}}, {{0.34761904761904766`, 1/3}}, {{
           0.5095238095238096, 0.52}}, {{0.5857142857142857, 0.52}}, {{
           0.4523809523809524, 
           0.14666666666666667`}}, {{0.48571428571428577`, 1/3}}, {{
            0.7428571428571429, 1/3}}, {{1.023809523809524, (-1)/15}}, {{
            0.6095238095238095, 1/3}}, {{0.28571428571428575`, 
           0.10666666666666667`}}, {{0.07142857142857141, (-1)/15}}, {{
           0.5476190476190476, 0.6933333333333334}}, {{0.8095238095238095, 
           0.10666666666666667`}}}], $CellContext`kk = {3, 4, 5, 6, 7, 8, 9, 
         12, 11, 13, 10, 1, 14, 15, 2, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
          26, 27, 28, 29, 30}, $CellContext`KempeOrder1[
          Alternatives[
           Pattern[$CellContext`g, 
            Blank[$CellContext`PlanarGraph]], 
           Pattern[$CellContext`g, 
            Blank[$CellContext`Graph]]]] := 
        Module[{$CellContext`degs = \
$CellContext`DegreeSequenceOrdered1[$CellContext`g], $CellContext`v}, 
          Table[$CellContext`v = Part[
              Select[
               Range[
                $CellContext`VV[$CellContext`g]], Part[$CellContext`degs, #] <= 
               5& , 1], 1]; 
           Part[$CellContext`degs, $CellContext`v] = Infinity; Decrement[
             Part[$CellContext`degs, 
              $CellContext`Neighbors1[$CellContext`g, $CellContext`v]]]; \
$CellContext`v, {
            $CellContext`VV[$CellContext`g]}]], \
$CellContext`DegreeSequenceOrdered1[
          Pattern[$CellContext`g, 
           Blank[$CellContext`Graph]]] := Map[Length, 
          $CellContext`ToAdjacencyListsSW[$CellContext`g]], \
$CellContext`DegreeSequenceOrdered1[
          Pattern[$CellContext`g, 
           
           Blank[$CellContext`PlanarGraph]]] := \
$CellContext`DegreeSequenceOrdered1[
          
          Apply[$CellContext`Graph, $CellContext`g]], \
$CellContext`ToAdjacencyListsSW[
          Pattern[$CellContext`G, 
           Blank[$CellContext`Graph]]] := ($CellContext`etemp = 
          Union[$CellContext`ee = Map[Sort, 
              $CellContext`EdgesSW[$CellContext`G]], 
            Map[Reverse, $CellContext`ee]]; $CellContext`missing = 
          Complement[
            Range[
             Length[
              Part[$CellContext`G, 2]]], 
            Map[First, $CellContext`etemp]]; $CellContext`etemp = Sort[
            Join[$CellContext`etemp, 
             
             Table[{$CellContext`m, {}}, {$CellContext`m, \
$CellContext`missing}]]]; ReplaceAll[
           ReplaceAll[
            Split[$CellContext`etemp, Part[#, 1] === Part[#2, 1]& ], {
              Blank[Integer], 
              Pattern[$CellContext`n, 
               
               Blank[]]} :> $CellContext`n], {{}} -> {}]), $CellContext`etemp = \
{{1, 10}, {1, 11}, {1, 12}, {1, 17}, {1, 25}, {2, 3}, {2, 18}, {2, 20}, {2, 
         21}, {2, 24}, {3, 2}, {3, 4}, {3, 21}, {3, 24}, {4, 3}, {4, 5}, {4, 
         21}, {4, 24}, {4, 29}, {5, 4}, {5, 9}, {5, 21}, {5, 28}, {5, 29}, {6,
          8}, {6, 13}, {6, 19}, {6, 26}, {7, 8}, {7, 11}, {7, 25}, {7, 27}, {
         8, 6}, {8, 7}, {8, 13}, {8, 15}, {8, 17}, {8, 25}, {8, 27}, {9, 5}, {
         9, 10}, {9, 18}, {9, 21}, {9, 23}, {10, 1}, {10, 9}, {10, 11}, {10, 
         12}, {10, 16}, {10, 18}, {10, 23}, {11, 1}, {11, 7}, {11, 10}, {11, 
         15}, {11, 16}, {11, 22}, {11, 25}, {11, 27}, {12, 1}, {12, 10}, {12, 
         13}, {12, 17}, {12, 18}, {12, 20}, {13, 6}, {13, 8}, {13, 12}, {13, 
         14}, {13, 17}, {13, 19}, {14, 13}, {14, 19}, {14, 24}, {14, 26}, {14,
          28}, {14, 29}, {15, 8}, {15, 11}, {15, 22}, {15, 27}, {16, 10}, {16,
          11}, {16, 22}, {16, 23}, {17, 1}, {17, 8}, {17, 12}, {17, 13}, {17, 
         25}, {18, 2}, {18, 9}, {18, 10}, {18, 12}, {18, 20}, {18, 21}, {19, 
         6}, {19, 13}, {19, 14}, {19, 26}, {20, 2}, {20, 12}, {20, 18}, {20, 
         24}, {21, 2}, {21, 3}, {21, 4}, {21, 5}, {21, 9}, {21, 18}, {22, 
         11}, {22, 15}, {22, 16}, {22, 23}, {23, 9}, {23, 10}, {23, 16}, {23, 
         22}, {24, 2}, {24, 3}, {24, 4}, {24, 14}, {24, 20}, {24, 29}, {25, 
         1}, {25, 7}, {25, 8}, {25, 11}, {25, 17}, {26, 6}, {26, 14}, {26, 
         19}, {26, 28}, {27, 7}, {27, 8}, {27, 11}, {27, 15}, {28, 5}, {28, 
         14}, {28, 26}, {28, 29}, {29, 4}, {29, 5}, {29, 14}, {29, 24}, {29, 
         28}}, $CellContext`ee = {{1, 10}, {1, 11}, {1, 12}, {1, 17}, {1, 
         25}, {2, 3}, {2, 18}, {2, 20}, {2, 21}, {2, 24}, {3, 4}, {3, 21}, {3,
          24}, {4, 5}, {4, 21}, {4, 24}, {4, 29}, {5, 9}, {5, 21}, {5, 28}, {
         5, 29}, {6, 8}, {6, 13}, {6, 19}, {6, 26}, {7, 8}, {7, 11}, {7, 
         25}, {7, 27}, {8, 13}, {8, 15}, {8, 17}, {8, 25}, {8, 27}, {9, 10}, {
         9, 18}, {9, 21}, {9, 23}, {10, 11}, {10, 12}, {10, 16}, {10, 18}, {
         10, 23}, {11, 15}, {11, 16}, {11, 22}, {11, 25}, {11, 27}, {12, 
         13}, {12, 17}, {12, 18}, {12, 20}, {13, 14}, {13, 17}, {13, 19}, {14,
          19}, {14, 24}, {14, 26}, {14, 28}, {14, 29}, {15, 22}, {15, 27}, {
         16, 22}, {16, 23}, {17, 25}, {18, 20}, {18, 21}, {19, 26}, {20, 
         24}, {22, 23}, {24, 29}, {26, 28}, {28, 29}}, $CellContext`EdgesSW[
          Pattern[$CellContext`G, 
           Blank[$CellContext`Graph]]] := Map[First, 
          Part[$CellContext`G, 1]], $CellContext`missing = {}, $CellContext`VV[
          $CellContext`PlanarGraph[
           Blank[], 
           Pattern[$CellContext`v, 
            Blank[]]]] := Length[$CellContext`v], $CellContext`VV[
          $CellContext`Graph[
           Blank[], 
           Pattern[$CellContext`v, 
            Blank[]]]] := Length[$CellContext`v], $CellContext`Neighbors1[
          Pattern[$CellContext`g, 
           Blank[$CellContext`Graph]], 
          Pattern[$CellContext`v, 
           Blank[Integer]]] := Cases[
          Part[$CellContext`g, 1], Alternatives[{{
              Pattern[$CellContext`z, 
               Blank[]], $CellContext`v, 
              BlankNullSequence[]}}, {{$CellContext`v, 
              Pattern[$CellContext`z, 
               Blank[]], 
              
              BlankNullSequence[]}}] :> $CellContext`z], \
$CellContext`Neighbors1[
          Pattern[$CellContext`g, 
           Blank[$CellContext`PlanarGraph]], 
          Pattern[$CellContext`v, 
           Blank[]]] := $CellContext`Neighbors1[
          
          Apply[$CellContext`Graph, $CellContext`g], $CellContext`v], \
$CellContext`Neighbors1[
          Pattern[$CellContext`g, 
           Blank[]], 
          Pattern[$CellContext`v, 
           Blank[List]]] := Apply[Union, 
          
          Map[$CellContext`Neighbors1[$CellContext`g, #]& , $CellContext`v]], \
$CellContext`Neighbors1[
          Pattern[$CellContext`adj, 
           Blank[List]], 
          Pattern[$CellContext`v, 
           Blank[Integer]], 
          Pattern[$CellContext`col, 
           Blank[]], 
          Pattern[$CellContext`goodcol, 
           Blank[]]] := Select[
          Prepend[
           Part[$CellContext`adj, $CellContext`v], $CellContext`v], 
          MemberQ[$CellContext`goodcol, 
           Part[$CellContext`col, #]]& ], $CellContext`FourColoring1[
          Pattern[$CellContext`g, 
           Blank[$CellContext`PlanarGraph]]] := 
        Module[{$CellContext`cols = {}}, $CellContext`KempeList = \
($CellContext`partialcols = {}); $CellContext`order = \
$CellContext`KempeOrder1[$CellContext`g]; $CellContext`fc = {}; 
          Do[$CellContext`nbrs = $CellContext`Neighbors1[
                $CellContext`InduceSubgraphRespectOrder1[$CellContext`g, 
                 Take[$CellContext`order, -$CellContext`j]], 1] - 1; 
            If[($CellContext`lennbr = Length[
                 Union[
                  Part[$CellContext`cols, $CellContext`nbrs]]]) <= 
              3, $CellContext`cols = Flatten[{$CellContext`newcol = First[
                    Complement[
                    Range[4], 
                    
                    Part[$CellContext`cols, $CellContext`nbrs]]], \
$CellContext`cols}]; AppendTo[$CellContext`KempeList, {$CellContext`j, 0, 
                 StringForm[
                 " `` `` used for neighbors of ``; first free color for `` is \
``.", $CellContext`lennbr, 
                  If[$CellContext`lennbr == 1, "color", "colors"], 
                  Part[$CellContext`order, -$CellContext`j], 
                  Part[$CellContext`order, -$CellContext`j], 
                  
                  ReplaceAll[$CellContext`newcol, $CellContext`colCode]]}], \
$CellContext`pts = Map[First, 
                 N[
                  Part[
                   $CellContext`InduceSubgraphRespectOrder1[$CellContext`g, 
                    Take[$CellContext`order, {-$CellContext`j, -1}]], 2, 
                   Prepend[$CellContext`nbrs + 1, 1]]]]; $CellContext`nbrs = 
               Part[$CellContext`nbrs, 
                 Flatten[
                  Map[Position[
                    Rest[$CellContext`pts], #]& , 
                   $CellContext`MakePointsCounterclockwise1[
                    Rest[$CellContext`pts], 
                    
                    First[$CellContext`pts]]]]]; $CellContext`gadj = \
$CellContext`ToAdjacencyLists1[
                 $CellContext`InduceSubgraphRespectOrder1[$CellContext`g, 
                  Take[$CellContext`order, -$CellContext`j + 1]]]; 
              If[Length[$CellContext`nbrs] == 
                4, $CellContext`fc1 = $CellContext`KempeChain1[
                   
                   Part[$CellContext`nbrs, {1, 
                    3}], $CellContext`cols]; $CellContext`fc = 
                 If[$CellContext`fc1 =!= False, $CellContext`fc1, 
                   $CellContext`KempeChain1[
                    Part[$CellContext`nbrs, {2, 4}], $CellContext`cols]]; 
                AppendTo[$CellContext`KempeList, {$CellContext`j, \
$CellContext`j, 
                   StringForm[
                   " Kempe chain for the 4 neighbors of vertex `` frees `` \
for vertex ``.", 
                    Part[$CellContext`order, -$CellContext`j], 
                    ReplaceAll[
                    First[
                    Complement[
                    Range[4], 
                    
                    Part[$CellContext`fc, $CellContext`nbrs]]], \
$CellContext`colCode], 
                    
                    Part[$CellContext`order, -$CellContext`j]]}], \
$CellContext`nbrsColors = 
                 Part[$CellContext`cols, $CellContext`nbrs]; \
$CellContext`dupColor = First[
                   
                   Select[$CellContext`nbrsColors, 
                    Count[$CellContext`nbrsColors, #] == 2& , 
                    1]]; $CellContext`samecolorNbrs = 
                 Select[$CellContext`nbrs, 
                   Part[$CellContext`cols, #] == $CellContext`dupColor& , 
                   2]; $CellContext`samecolorIndices = Sort[
                   Flatten[
                    Map[
                    Position[$CellContext`nbrs, #]& , \
$CellContext`samecolorNbrs]]]; If[
                  MemberQ[{1, 4}, 
                   Abs[
                    Apply[
                    Subtract, $CellContext`samecolorIndices]]], \
$CellContext`v1 = ReplaceAll[$CellContext`samecolorIndices, {{1, 5} -> 1, {
                    Pattern[$CellContext`m, 
                    Blank[]], 
                    Pattern[$CellContext`n, 
                    Blank[]]} :> $CellContext`n}]; $CellContext`v3 = First[
                    
                    DeleteCases[$CellContext`samecolorIndices, \
$CellContext`v1]]; $CellContext`v2 = $CellContext`v1 + 
                    2; $CellContext`fc1 = $CellContext`KempeChain1[{
                    Part[$CellContext`nbrs, 
                    Mod[$CellContext`v2, 5, 1]], 
                    Part[$CellContext`nbrs, 
                    
                    Mod[{$CellContext`v1, $CellContext`v3}, 5, 
                    1]]}, $CellContext`cols]; $CellContext`fc = 
                   If[$CellContext`fc1 =!= False, $CellContext`fc1, 
                    $CellContext`KempeChain1[
                    Part[$CellContext`nbrs, 
                    
                    Mod[{$CellContext`v1 + 1, $CellContext`v2 + 1}, 5, 
                    1]], $CellContext`cols]], $CellContext`v1 = 
                   ReplaceAll[$CellContext`samecolorIndices, {{1, 4} -> 
                    1, {2, 5} -> 2, {
                    Pattern[$CellContext`m, 
                    Blank[]], 
                    Pattern[$CellContext`n, 
                    Blank[]]} :> $CellContext`n}] - 
                    1; $CellContext`v2 = $CellContext`v1 + 
                    2; $CellContext`fc1 = $CellContext`KempeChain1[
                    Part[$CellContext`nbrs, 
                    
                    Mod[{$CellContext`v1, $CellContext`v2}, 5, 
                    1]], $CellContext`cols]; $CellContext`fc = 
                   If[$CellContext`fc1 =!= 
                    False, $CellContext`fc1, $CellContext`fc1 = \
$CellContext`KempeChain1[
                    Part[$CellContext`nbrs, 
                    
                    Mod[{$CellContext`v1, $CellContext`v2 + 1}, 5, 
                    1]], $CellContext`cols]; 
                    If[$CellContext`fc1 =!= 
                    False, $CellContext`fc1, $CellContext`fc1 = \
$CellContext`KempeChain1[
                    Part[$CellContext`nbrs, 
                    
                    Mod[{$CellContext`v1 + 1, $CellContext`v2 + 1}, 5, 
                    1]], $CellContext`cols]; 
                    If[$CellContext`fc1 === False, 
                    AppendTo[$CellContext`KempeList, {$CellContext`j, \
$CellContext`j, 
                    " Kempe chains tangled; the method failed to free a color \
for vertex 1."}]; AppendTo[$CellContext`partialcols, 
                    Part[$CellContext`partialcols, -1]]; 
                    Return[$Failed], $CellContext`fc2 = \
$CellContext`KempeChain1[
                    Part[$CellContext`nbrs, 
                    
                    Mod[{$CellContext`v1 - 1, $CellContext`v2}, 5, 
                    1]], $CellContext`fc1]; 
                    If[$CellContext`fc2 =!= False, $CellContext`fc2, 
                    AppendTo[$CellContext`KempeList, {$CellContext`j, \
$CellContext`j, 
                    " Kempe chains tangled; the method failed to free a color \
for vertex 1."}]; AppendTo[$CellContext`partialcols, 
                    Part[$CellContext`partialcols, -1]]; Return[$Failed]]]]]]; 
                AppendTo[$CellContext`KempeList, {$CellContext`j, \
$CellContext`j, 
                   StringForm[
                   " Kempe chain for the 5 neighbors of vertex `` frees `` \
for vertex ``.", 
                    Part[$CellContext`order, -$CellContext`j], 
                    ReplaceAll[
                    First[
                    Complement[
                    Range[4], 
                    
                    Part[$CellContext`fc, $CellContext`nbrs]]], \
$CellContext`colCode], 
                    Part[$CellContext`order, -$CellContext`j]]}]]; 
              If[$CellContext`fc =!= $Failed, $CellContext`cols = Flatten[{
                   First[
                    Complement[
                    Range[4], 
                    
                    Part[$CellContext`fc, $CellContext`nbrs]]], \
$CellContext`fc}]]]; AppendTo[$CellContext`partialcols, 
              Part[
               PadLeft[$CellContext`cols, 
                Length[
                 Part[$CellContext`g, 2]], 5], 
               $CellContext`InversePermutation[$CellContext`order]]], \
{$CellContext`j, 
             $CellContext`VV[$CellContext`g]}]; 
          If[$CellContext`fc === $Failed, $Failed, 
            Part[$CellContext`cols, 
             $CellContext`InversePermutation[$CellContext`order]]]], \
$CellContext`KempeList = {{1, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            0, "colors", 30, 30, "red"]}, {2, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            1, "color", 29, 29, "green"]}, {3, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            0, "colors", 28, 28, "red"]}, {4, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            1, "color", 27, 27, "red"]}, {5, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            0, "colors", 26, 26, "red"]}, {6, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            1, "color", 25, 25, "green"]}, {7, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            0, "colors", 24, 24, "red"]}, {8, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            1, "color", 23, 23, "green"]}, {9, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            0, "colors", 22, 22, "red"]}, {10, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            1, "color", 21, 21, "red"]}, {11, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            1, "color", 20, 20, "green"]}, {12, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            1, "color", 19, 19, "green"]}, {13, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            1, "color", 18, 18, "green"]}, {14, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            2, "colors", 17, 17, "blue"]}, {15, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            2, "colors", 16, 16, "blue"]}, {16, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            2, "colors", 2, 2, "blue"]}, {17, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            2, "colors", 15, 15, "red"]}, {18, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            2, "colors", 14, 14, "blue"]}, {19, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            3, "colors", 1, 1, "yellow"]}, {20, 20, 
           StringForm[
           " Kempe chain for the 5 neighbors of vertex `` frees `` for vertex \
``.", 10, "yellow", 10]}, {21, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            3, "colors", 13, 13, "blue"]}, {22, 22, 
           StringForm[
           " Kempe chain for the 5 neighbors of vertex `` frees `` for vertex \
``.", 11, "red", 11]}, {23, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            2, "colors", 12, 12, "green"]}, {24, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            3, "colors", 9, 9, "blue"]}, {25, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            3, "colors", 8, 8, "yellow"]}, {26, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            3, "colors", 7, 7, "blue"]}, {27, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            3, "colors", 6, 6, "yellow"]}, {28, 0, 
           StringForm[
           " `` `` used for neighbors of ``; first free color for `` is ``.", 
            3, "colors", 5, 5, "blue"]}, {29, 29, 
           StringForm[
           " Kempe chain for the 5 neighbors of vertex `` frees `` for vertex \
``.", 4, "yellow", 4]}, {30, 30, 
           StringForm[
           " Kempe chain for the 5 neighbors of vertex `` frees `` for vertex \
``.", 3, "yellow", 3]}}, $CellContext`partialcols = CompressedData["
1:eJyN0FEKhEAMg+FJUq8h7JU8ghfY+7+tOrrggD8WmpePQuhn/S6rW2vzuRON
CE0qUpGK1KQiNalIRWpSk5o0pBk071WkGbVQdWkNWqq7BnSrkHpWP2tIizSk
RRrSw+JLq2t23Y+6lvs3/rrlD78EDhI=
         "], $CellContext`order = {3, 4, 5, 
         6, 7, 8, 9, 12, 11, 13, 10, 1, 14, 15, 2, 16, 17, 18, 19, 20, 21, 22,
          23, 24, 25, 26, 27, 28, 29, 30}, $CellContext`fc = {1, 3, 4, 3, 4, 
         3, 2, 4, 3, 2, 4, 3, 1, 3, 3, 3, 2, 4, 2, 1, 1, 2, 1, 2, 3, 1, 1, 2, 
         1}, $CellContext`nbrs = {12, 20, 24, 14, 
         13}, $CellContext`InduceSubgraphRespectOrder1[
          Pattern[$CellContext`g, 
           Blank[$CellContext`PlanarGraph]], 
          Pattern[$CellContext`verts, 
           Blank[]]] := Apply[$CellContext`PlanarGraph, 
          $CellContext`InduceSubgraphRespectOrder1[
           
           Apply[$CellContext`Graph, $CellContext`g], $CellContext`verts]], \
$CellContext`InduceSubgraphRespectOrder1[
          Pattern[$CellContext`g, 
           Blank[$CellContext`Graph]], 
          Pattern[$CellContext`s, 
           Blank[]]] := $CellContext`FromAdjacencyMatrixSW[
          Part[
           $CellContext`InduceSubgraphMatrix[
            $CellContext`GraphMat[
             $CellContext`ToAdjacencyMatrixSW[$CellContext`g], 
             Map[First, 
              Part[$CellContext`g, 2]]], $CellContext`s], 1], 
          
          Part[$CellContext`g, 
           2, $CellContext`s]], $CellContext`FromAdjacencyMatrixSW[
          Pattern[$CellContext`m, 
           Blank[]], 
          Pattern[$CellContext`v, 
           Blank[List]]] := $CellContext`Graph[
          Union[
           Map[List, 
            Map[Sort, 
             
             Position[$CellContext`m, 
              1]]]], $CellContext`v], $CellContext`InduceSubgraphMatrix[
          $CellContext`GraphMat[
           Pattern[$CellContext`g, 
            Blank[]], 
           Pattern[$CellContext`v, 
            Blank[]]], 
          Pattern[$CellContext`s, 
           Blank[List]]] := Condition[
          $CellContext`GraphMat[
           Transpose[
            Part[
             Transpose[
              Part[$CellContext`g, $CellContext`s]], $CellContext`s]], 
           Part[$CellContext`v, $CellContext`s]], Length[$CellContext`s] <= 
          Length[$CellContext`g]], $CellContext`ToAdjacencyMatrixSW[
          Pattern[$CellContext`g, 
           Blank[$CellContext`Graph]]] := 
        Module[{$CellContext`e = \
$CellContext`ToAdjacencyListsSW[$CellContext`g], $CellContext`blanks = 
           Table[0, {
              $CellContext`VV[$CellContext`g]}], $CellContext`am, \
$CellContext`nb, $CellContext`k}, $CellContext`am = 
           Table[$CellContext`nb = $CellContext`blanks; Scan[Increment[
                Part[$CellContext`nb, #]]& , 
               
               Part[$CellContext`e, $CellContext`k]]; $CellContext`nb, \
{$CellContext`k, 
              Length[$CellContext`e]}]; 
          Do[Part[$CellContext`am, $CellContext`k, $CellContext`k] = 
            0, {$CellContext`k, 
             $CellContext`VV[$CellContext`g]}]; 
          ReplaceAll[$CellContext`am, PatternTest[
              Blank[Integer], Positive] -> 1]], $CellContext`lennbr = 
        4, $CellContext`newcol = 
        3, $CellContext`colCode = {
         1 -> "red", 2 -> "green", 3 -> "blue", 4 -> 
          "yellow"}, $CellContext`pts = {{0.54, 0.6901}, {0.5, 0.56}, {0.3, 
         0.7001}, {0.56, 0.8201}, {0.63, 0.6}, {0.66, 
         0.6901}}, $CellContext`MakePointsCounterclockwise1[
          Pattern[$CellContext`pts, 
           Blank[]], 
          Pattern[$CellContext`offset, 
           Blank[]]] := SortBy[
          N[$CellContext`pts], Arg[
           Apply[Complex, # - $CellContext`offset]]& ], $CellContext`gadj = {{
          10, 11, 12, 17, 25}, {3, 18, 20, 21, 24}, {2, 4, 21, 24}, {3, 5, 21,
           24, 29}, {4, 9, 21, 28, 29}, {8, 13, 19, 26}, {8, 11, 25, 27}, {6, 
          7, 13, 15, 17, 25, 27}, {5, 10, 18, 21, 23}, {1, 9, 11, 12, 16, 18, 
          23}, {1, 7, 10, 15, 16, 22, 25, 27}, {1, 10, 13, 17, 18, 20}, {6, 8,
           12, 14, 17, 19}, {13, 19, 24, 26, 28, 29}, {8, 11, 22, 27}, {10, 
          11, 22, 23}, {1, 8, 12, 13, 25}, {2, 9, 10, 12, 20, 21}, {6, 13, 14,
           26}, {2, 12, 18, 24}, {2, 3, 4, 5, 9, 18}, {11, 15, 16, 23}, {9, 
          10, 16, 22}, {2, 3, 4, 14, 20, 29}, {1, 7, 8, 11, 17}, {6, 14, 19, 
          28}, {7, 8, 11, 15}, {5, 14, 26, 29}, {4, 5, 14, 24, 
          28}}, $CellContext`ToAdjacencyLists1[
          Alternatives[
           Pattern[$CellContext`g, 
            Blank[$CellContext`PlanarGraph]], 
           Pattern[$CellContext`g, 
            Blank[$CellContext`Graph]]]] := $CellContext`ToAdjacencyListsSW[
          Apply[$CellContext`Graph, $CellContext`g]], $CellContext`fc1 = {1, 
         3, 4, 3, 4, 3, 2, 4, 3, 2, 4, 3, 1, 3, 3, 3, 2, 4, 2, 1, 1, 2, 1, 2, 
         3, 1, 1, 2, 1}, $CellContext`KempeChain1[{
           Pattern[$CellContext`v1, 
            Blank[]], 
           Pattern[$CellContext`vv2, 
            Blank[]]}, 
          Pattern[$CellContext`coloring, 
           Blank[
           List]]] := ($CellContext`answer = $CellContext`coloring; \
$CellContext`chold = {}; $CellContext`chain = {$CellContext`v1}; While[
           And[$CellContext`success = Intersection[
               
               Flatten[{$CellContext`vv2}], $CellContext`chain] == {}, \
$CellContext`chain != $CellContext`chold], {$CellContext`chold, \
$CellContext`chain} = {$CellContext`chain, 
             Union[$CellContext`chain, 
              Apply[Union, 
               
               Map[$CellContext`Neighbors1[$CellContext`gadj, #, \
$CellContext`coloring, 
                 Part[$CellContext`coloring, 
                  
                  Flatten[{$CellContext`v1, $CellContext`vv2}]]]& , \
$CellContext`chain]]]}]; 
         If[$CellContext`success, 
           Do[$CellContext`answer = 
             ReplacePart[$CellContext`answer, $CellContext`j -> Part[
                 Complement[
                  Part[$CellContext`coloring, 
                   Flatten[{$CellContext`v1, $CellContext`vv2}]], {
                   Part[$CellContext`answer, $CellContext`j]}], 
                 1]], {$CellContext`j, $CellContext`chain}]; \
$CellContext`answer, False]), $CellContext`v1 = 
        0, $CellContext`answer = {1, 3, 4, 3, 4, 3, 2, 4, 3, 2, 4, 3, 1, 3, 3,
          3, 2, 4, 2, 1, 1, 2, 1, 2, 3, 1, 1, 2, 1}, $CellContext`chold = {1, 
         8, 11, 13, 27}, $CellContext`chain = {1, 8, 11, 13, 
         27}, $CellContext`success = 
        True, $CellContext`nbrsColors = {3, 1, 2, 3, 
         4}, $CellContext`dupColor = 
        3, $CellContext`samecolorNbrs = {12, 
         14}, $CellContext`samecolorIndices = {1, 4}, $CellContext`v3 = 
        2, $CellContext`v2 = 
        2, $CellContext`fc2 = {3, 4, 3, 4, 3, 2, 1, 3, 2, 1, 3, 4, 3, 3, 3, 2,
          4, 2, 1, 1, 2, 1, 2, 3, 1, 4, 2, 1}, $CellContext`InversePermutation[
          Pattern[$CellContext`s, 
           Blank[]]] := Ordering[$CellContext`s], $CellContext`ShowPlanarGraph[
          Pattern[$CellContext`g, 
           Blank[$CellContext`PlanarGraph]], 
          Pattern[$CellContext`vcoloring, 
           Blank[]], 
          Pattern[$CellContext`vcolList, 
           Blank[]], 
          Pattern[$CellContext`opts, 
           BlankNullSequence[Rule]]] := $CellContext`ShowPlanarGraph[
          
          Apply[$CellContext`Graph, $CellContext`g], $CellContext`vcoloring, \
$CellContext`vcolList, $CellContext`opts], $CellContext`ShowPlanarGraph[
          Pattern[$CellContext`g1, 
           Blank[$CellContext`Graph]], 
          Pattern[$CellContext`vcoloring, 
           Blank[]], 
          Pattern[$CellContext`vcolList, 
           Blank[]], 
          Pattern[$CellContext`opts, 
           BlankNullSequence[Rule]]] := 
        Module[{$CellContext`g, $CellContext`esty, $CellContext`vsize = 
           PointSize[
            0.045], $CellContext`pts, $CellContext`lines, $CellContext`ec}, \
$CellContext`ec = RGBColor[0.5, 0, 0]; $CellContext`normalQ = 
           False; $CellContext`esty = {}; $CellContext`vcol = {}; If[
            Not[
             
             ListQ[$CellContext`esty]], $CellContext`esty = \
{$CellContext`esty}]; $CellContext`esty = 
           Append[$CellContext`esty, $CellContext`ec]; $CellContext`g = 
           If[$CellContext`normalQ, $CellContext`NormalizeVertices, 
             Identity][$CellContext`g1]; $CellContext`pts = Map[Point, 
             Map[First, 
              Part[$CellContext`g, 2]]]; $CellContext`colList = Table[{}, {
              Length[$CellContext`pts]}]; $CellContext`colpts = If[
             
             Or[$CellContext`vcoloring === None, $CellContext`vcoloring === 
              False], $CellContext`pts, 
             Transpose[{
               
               Part[$CellContext`vcolList, $CellContext`vcoloring], \
$CellContext`pts}], $CellContext`pts]; $CellContext`lines = Map[Line[
              Part[$CellContext`g, 2, #, 1]]& , 
             $CellContext`EdgeSet[$CellContext`g]]; $CellContext`vsize = 
           ReplaceAll[$CellContext`vsize, Automatic -> PointSize[
               
               Which[$CellContext`VV[$CellContext`g1] <= 12, 
                0.035, $CellContext`VV[$CellContext`g1] <= 25, 
                0.022, $CellContext`VV[$CellContext`g1] <= 100, 0.018, True, 
                0.01]]]; Graphics[{
             Join[$CellContext`esty, $CellContext`lines], 
             
             Join[{$CellContext`vcol, $CellContext`vsize}, \
$CellContext`colpts]}, 
            Apply[Sequence, 
             FilterRules[{$CellContext`opts}, 
              Map[
              First, {AlignmentPoint -> Center, AspectRatio -> Automatic, 
                Axes -> False, AxesLabel -> None, AxesOrigin -> Automatic, 
                AxesStyle -> {}, Background -> None, BaselinePosition -> 
                Automatic, BaseStyle -> {}, ColorOutput -> Automatic, 
                ContentSelectable -> Automatic, CoordinatesToolOptions -> 
                Automatic, DisplayFunction :> $DisplayFunction, Epilog -> {}, 
                FormatType :> TraditionalForm, Frame -> False, FrameLabel -> 
                None, FrameStyle -> {}, FrameTicks -> Automatic, 
                FrameTicksStyle -> {}, GridLines -> None, 
                GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All,
                 ImageSize -> Automatic, ImageSizeRaw -> Automatic, 
                LabelStyle -> {}, Method -> Automatic, PlotLabel -> None, 
                PlotRange -> All, PlotRangeClipping -> False, 
                PlotRangePadding -> Automatic, PlotRegion -> Automatic, 
                PreserveImageOptions -> Automatic, Prolog -> {}, RotateLabel -> 
                True, Ticks -> Automatic, TicksStyle -> {}}]]], 
            PlotRange -> $CellContext`FindPlotRangeSW[
              Map[List, 
               $CellContext`VerticesSW[$CellContext`g]]]]], \
$CellContext`normalQ = 
        False, $CellContext`vcol = {}, $CellContext`colList = {{}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, $CellContext`colpts = {{
           RGBColor[1., 0.8954026666666667, 0.3333333333333333], 
           Point[{0.34, 0.31}]}, {
           RGBColor[0.41173533333333334`, 0.7097993333333332, 1.], 
           Point[{0.56, 0.8201}]}, {
           RGBColor[1., 0.8954026666666667, 0.3333333333333333], 
           Point[{0.54, 0.6901}]}, {
           RGBColor[0.926664, 0.473332, 0.47999533333333333`], 
           Point[{0.37, 0.46}]}, {
           RGBColor[0.41173533333333334`, 0.7097993333333332, 1.], 
           Point[{0.72, 0.58}]}, {
           RGBColor[1., 0.8954026666666667, 0.3333333333333333], 
           Point[{0.76, 0.61}]}, {
           RGBColor[0.41173533333333334`, 0.7097993333333332, 1.], 
           Point[{0.84, 0.64}]}, {
           RGBColor[1., 0.8954026666666667, 0.3333333333333333], 
           Point[{0.9501, 0.67}]}, {
           RGBColor[0.41173533333333334`, 0.7097993333333332, 1.], 
           Point[{0.08, 0.89}]}, {
           RGBColor[
           0.3333333333333333, 0.8600013333333333, 0.5600046666666667], 
           Point[{0.58, 0.36}]}, {
           RGBColor[1., 0.8954026666666667, 0.3333333333333333], 
           Point[{0.06, 0.55}]}, {
           RGBColor[
           0.3333333333333333, 0.8600013333333333, 0.5600046666666667], 
           Point[{0.19, 0.42}]}, {
           RGBColor[0.41173533333333334`, 0.7097993333333332, 1.], 
           Point[{0.89, 0.38}]}, {
           RGBColor[0.41173533333333334`, 0.7097993333333332, 1.], 
           Point[{0.5, 0.56}]}, {
           RGBColor[0.926664, 0.473332, 0.47999533333333333`], 
           Point[{0.3, 0.7001}]}, {
           RGBColor[0.41173533333333334`, 0.7097993333333332, 1.], 
           Point[{0.09, 0.16}]}, {
           RGBColor[0.41173533333333334`, 0.7097993333333332, 1.], 
           Point[{0.55, 0.21}]}, {
           RGBColor[
           0.3333333333333333, 0.8600013333333333, 0.5600046666666667], 
           Point[{0.29, 0.58}]}, {
           RGBColor[1., 0.8954026666666667, 0.3333333333333333], 
           Point[{0.6901, 0.5}]}, {
           RGBColor[
           0.3333333333333333, 0.8600013333333333, 0.5600046666666667], 
           Point[{0.33, 0.85}]}, {
           RGBColor[0.926664, 0.473332, 0.47999533333333333`], 
           Point[{0.63, 0.6}]}, {
           RGBColor[0.926664, 0.473332, 0.47999533333333333`], 
           Point[{0.8301, 0.52}]}, {
           RGBColor[
           0.3333333333333333, 0.8600013333333333, 0.5600046666666667], 
           Point[{0.55, 0.07}]}, {
           RGBColor[0.926664, 0.473332, 0.47999533333333333`], 
           Point[{0.72, 0.1}]}, {
           RGBColor[
           0.3333333333333333, 0.8600013333333333, 0.5600046666666667], 
           Point[{0.66, 0.6901}]}, {
           RGBColor[0.41173533333333334`, 0.7097993333333332, 1.], 
           Point[{0.24, 0.46}]}, {
           RGBColor[0.926664, 0.473332, 0.47999533333333333`], 
           Point[{0.36, 0.99}]}, {
           RGBColor[0.926664, 0.473332, 0.47999533333333333`], 
           Point[{0.16, 0.36}]}, {
           RGBColor[
           0.3333333333333333, 0.8600013333333333, 0.5600046666666667], 
           Point[{0.8301, 0.84}]}, {
           RGBColor[0.926664, 0.473332, 0.47999533333333333`], 
           Point[{0.79, 0.75}]}}, $CellContext`EdgeSet[
          $CellContext`PlanarGraph[
           Pattern[$CellContext`g, 
            BlankSequence[]]]] := $CellContext`EdgeSet[
          $CellContext`Graph[$CellContext`g]], $CellContext`EdgeSet[
          Pattern[$CellContext`g, 
           Blank[$CellContext`Graph]]] := Map[First, 
          Part[$CellContext`g, 1]], $DisplayFunction = 
        Identity, $CellContext`FindPlotRangeSW[
          Pattern[$CellContext`v, 
           Blank[List]]] := 
        Block[{$CellContext`xmax, $CellContext`xmin, $CellContext`ymax, \
$CellContext`ymin, $CellContext`xr, $CellContext`yr, $CellContext`ave}, \
$CellContext`xmin = Min[
             Map[First[
               First[#]]& , $CellContext`v]]; $CellContext`xmax = Max[
             Map[First[
               First[#]]& , $CellContext`v]]; $CellContext`ymin = Min[
             Map[Last[
               First[#]]& , $CellContext`v]]; $CellContext`ymax = Max[
             Map[Last[
               First[#]]& , $CellContext`v]]; 
          If[Chop[$CellContext`xmax - $CellContext`xmin] == 0., 
            AddTo[$CellContext`xmax, 0.05]; 
            SubtractFrom[$CellContext`xmin, 0.05]]; 
          If[Chop[$CellContext`ymax - $CellContext`ymin] == 0., 
            AddTo[$CellContext`ymax, 0.05]; 
            SubtractFrom[$CellContext`ymin, 
              0.05]]; $CellContext`xr = $CellContext`xmax - $CellContext`xmin; \
$CellContext`yr = $CellContext`ymax - $CellContext`ymin; 
          Which[$CellContext`xr/$CellContext`yr > 
            3, $CellContext`ave = ($CellContext`ymax + $CellContext`ymin)/
              2; $CellContext`ymax = $CellContext`ave + $CellContext`xr/
               3; $CellContext`ymin = $CellContext`ave - $CellContext`xr/
              3, $CellContext`yr/$CellContext`xr > 
            3, $CellContext`ave = ($CellContext`xmax + $CellContext`xmin)/
              2; $CellContext`xmax = $CellContext`ave + $CellContext`yr/
               3; $CellContext`xmin = $CellContext`ave - $CellContext`yr/
              3]; {{$CellContext`xmin - 0.05 
             Max[1, $CellContext`xmax - $CellContext`xmin], $CellContext`xmax + 
             0.05 Max[
               1, $CellContext`xmax - $CellContext`xmin]}, {$CellContext`ymin - 
             0.05 Max[
              1, $CellContext`ymax - $CellContext`ymin], $CellContext`ymax + 
             0.05 Max[
               1, $CellContext`ymax - $CellContext`ymin]}}], \
$CellContext`VerticesSW[
          $CellContext`PlanarGraph[
           Pattern[$CellContext`g, 
            BlankSequence[]]]] := $CellContext`VerticesSW[
          $CellContext`Graph[$CellContext`g]], $CellContext`VerticesSW[
          $CellContext`Graph[
           Blank[], 
           Pattern[$CellContext`vv, 
            Blank[]]]] := Map[First, $CellContext`vv]}; 
      Typeset`initDone$$ = True); ReleaseHold[{{
         HoldComplete[$CellContext`ToAdjacencyMatrixSW[
             Pattern[$CellContext`g, 
              Blank[$CellContext`Graph]]] := 
           Module[{$CellContext`e = \
$CellContext`ToAdjacencyListsSW[$CellContext`g], $CellContext`blanks = 
              Table[0, {
                 $CellContext`VV[$CellContext`g]}], $CellContext`am, \
$CellContext`nb, $CellContext`k}, $CellContext`am = 
              Table[$CellContext`nb = $CellContext`blanks; Scan[Increment[
                   Part[$CellContext`nb, #]]& , 
                  
                  Part[$CellContext`e, $CellContext`k]]; $CellContext`nb, \
{$CellContext`k, 
                 Length[$CellContext`e]}]; 
             Do[Part[$CellContext`am, $CellContext`k, $CellContext`k] = 
               0, {$CellContext`k, 
                $CellContext`VV[$CellContext`g]}]; 
             ReplaceAll[$CellContext`am, PatternTest[
                 Blank[Integer], Positive] -> 1]]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`FromAdjacencyMatrixSW[
             Pattern[$CellContext`m, 
              Blank[]], 
             Pattern[$CellContext`v, 
              Blank[List]]] := $CellContext`Graph[
             Union[
              Map[List, 
               Map[Sort, 
                Position[$CellContext`m, 1]]]], $CellContext`v]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`FindPlotRangeSW[
            Pattern[$CellContext`v, 
             Blank[List]]] := 
          Block[{$CellContext`xmax, $CellContext`xmin, $CellContext`ymax, \
$CellContext`ymin, $CellContext`xr, $CellContext`yr, $CellContext`ave}, \
$CellContext`xmin = Min[
               Map[First[
                 First[#]]& , $CellContext`v]]; $CellContext`xmax = Max[
               Map[First[
                 First[#]]& , $CellContext`v]]; $CellContext`ymin = Min[
               Map[Last[
                 First[#]]& , $CellContext`v]]; $CellContext`ymax = Max[
               Map[Last[
                 First[#]]& , $CellContext`v]]; 
            If[Chop[$CellContext`xmax - $CellContext`xmin] == 0., 
              AddTo[$CellContext`xmax, 0.05]; 
              SubtractFrom[$CellContext`xmin, 0.05]]; 
            If[Chop[$CellContext`ymax - $CellContext`ymin] == 0., 
              AddTo[$CellContext`ymax, 0.05]; 
              SubtractFrom[$CellContext`ymin, 
                0.05]]; $CellContext`xr = $CellContext`xmax - \
$CellContext`xmin; $CellContext`yr = $CellContext`ymax - $CellContext`ymin; 
            Which[$CellContext`xr/$CellContext`yr > 
              3, $CellContext`ave = ($CellContext`ymax + $CellContext`ymin)/
                2; $CellContext`ymax = $CellContext`ave + $CellContext`xr/
                 3; $CellContext`ymin = $CellContext`ave - $CellContext`xr/
                3, $CellContext`yr/$CellContext`xr > 
              3, $CellContext`ave = ($CellContext`xmax + $CellContext`xmin)/
                2; $CellContext`xmax = $CellContext`ave + $CellContext`yr/
                 3; $CellContext`xmin = $CellContext`ave - $CellContext`yr/
                3]; {{$CellContext`xmin - 0.05 
               Max[1, $CellContext`xmax - $CellContext`xmin], \
$CellContext`xmax + 
               0.05 Max[
                 1, $CellContext`xmax - $CellContext`xmin]}, \
{$CellContext`ymin - 0.05 
               Max[1, $CellContext`ymax - $CellContext`ymin], \
$CellContext`ymax + 0.05 Max[1, $CellContext`ymax - $CellContext`ymin]}}]], 
         HoldComplete[Null], 
         HoldComplete[
         SeedRandom[
           1]; $CellContext`perm = {6, 1, 2, 13, 16, 3, 15, 9, 4, 8, 17, 12, 
            14, 11, 5, 10, 7}; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`permInv = {2, 3, 6, 9, 15, 1, 17, 10, 8, 
            16, 14, 12, 4, 13, 7, 5, 11}; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`InversePermutation[
             Pattern[$CellContext`s, 
              Blank[]]] := Ordering[$CellContext`s]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`ErreraGraphSW = \
$CellContext`PlanarGraph[{{{1, 3}}, {{1, 5}}, {{1, 10}}, {{1, 12}}, {{1, 
             17}}, {{2, 8}}, {{2, 9}}, {{2, 13}}, {{2, 14}}, {{2, 15}}, {{3, 
             5}}, {{3, 10}}, {{3, 11}}, {{3, 15}}, {{4, 6}}, {{4, 8}}, {{4, 
             11}}, {{4, 13}}, {{4, 16}}, {{5, 11}}, {{5, 12}}, {{5, 16}}, {{6,
              7}}, {{6, 13}}, {{6, 14}}, {{6, 16}}, {{7, 9}}, {{7, 12}}, {{7, 
             14}}, {{7, 16}}, {{7, 17}}, {{8, 11}}, {{8, 13}}, {{8, 15}}, {{9,
              10}}, {{9, 14}}, {{9, 15}}, {{9, 17}}, {{10, 15}}, {{10, 
             17}}, {{11, 15}}, {{11, 16}}, {{12, 16}}, {{12, 17}}, {{13, 
             14}}}, 
             
             ReplaceAll[{{{4, 13}}, {{4, 
               6}}, {{-0.2, 5}}, {{2, 2.2}}, {{-6, -1}}, {{6, 2.2}}, {{9.5, 
               1.6}}, {{2.7, 5}}, {{4.8, 7.8}}, {{4, 10.4}}, {{-1.5, 1.6}}, {{
               14, -1}}, {{4, 3.6}}, {{5.3, 5}}, {{3.2, 
               7.8}}, {{4, 0.3}}, {{8.1, 5}}}, {
                Pattern[$CellContext`x, 
                 Blank[]], 
                Pattern[$CellContext`y, 
                 Blank[]]} :> {($CellContext`x/15 + 0.5)/1.4, $CellContext`y/
                15}]]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`ErreraGraphSWP = $CellContext`PlanarGraph[
             
             ReplaceAll[{{{1, 3}}, {{1, 5}}, {{1, 10}}, {{1, 12}}, {{1, 
              17}}, {{2, 8}}, {{2, 9}}, {{2, 13}}, {{2, 14}}, {{2, 15}}, {{3, 
              5}}, {{3, 10}}, {{3, 11}}, {{3, 15}}, {{4, 6}}, {{4, 8}}, {{4, 
              11}}, {{4, 13}}, {{4, 16}}, {{5, 11}}, {{5, 12}}, {{5, 16}}, {{
              6, 7}}, {{6, 13}}, {{6, 14}}, {{6, 16}}, {{7, 9}}, {{7, 12}}, {{
              7, 14}}, {{7, 16}}, {{7, 17}}, {{8, 11}}, {{8, 13}}, {{8, 
              15}}, {{9, 10}}, {{9, 14}}, {{9, 15}}, {{9, 17}}, {{10, 15}}, {{
              10, 17}}, {{11, 15}}, {{11, 16}}, {{12, 16}}, {{12, 17}}, {{13, 
              14}}}, Pattern[$CellContext`i, 
                Blank[Integer]] :> 
              Part[$CellContext`permInv, $CellContext`i]], 
             ReplaceAll[
              
              Part[{{{4, 13}}, {{4, 
                6}}, {{-0.2, 5}}, {{2, 2.2}}, {{-6, -1}}, {{6, 2.2}}, {{9.5, 
                1.6}}, {{2.7, 5}}, {{4.8, 7.8}}, {{4, 10.4}}, {{-1.5, 
                1.6}}, {{14, -1}}, {{4, 3.6}}, {{5.3, 5}}, {{3.2, 
                7.8}}, {{4, 0.3}}, {{8.1, 5}}}, $CellContext`perm], {
                Pattern[$CellContext`x, 
                 Blank[]], 
                Pattern[$CellContext`y, 
                 Blank[]]} :> {($CellContext`x/15 + 0.5)/1.4, $CellContext`y/
                15}]]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`Soifer = $CellContext`PlanarGraph[{{{1, 
             3}}, {{1, 4}}, {{1, 6}}, {{1, 7}}, {{1, 9}}, {{2, 4}}, {{2, 
             5}}, {{2, 6}}, {{2, 8}}, {{2, 9}}, {{3, 5}}, {{3, 7}}, {{3, 
             8}}, {{4, 6}}, {{4, 8}}, {{5, 7}}, {{5, 8}}, {{5, 9}}, {{6, 
             9}}, {{7, 9}}}, {{{5., 0.}}, {{2.5, 2.35}}, {{0., 0.}}, {{3.2, 
             3.}}, {{1.8, 1.7}}, {{3.2, 1.7}}, {{1.4, 0.6}}, {{1.8, 3.}}, {{
             2.5, 1.05}}}]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`AllColors = Part[
             ColorData["Legacy", "Range"], 1]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`NiceColorSetNames = (Join[#, 
             Complement[$CellContext`AllColors, 
              Join[#, {"NavyBlue", "Black", "White"}]]]& )[{
             "Red", "Green", "Blue", "Yellow", "Magenta", "LemonChiffon", 
              "DarkOrchid", "LightSalmon", "LightPink", "Sienna", "Green", 
              "Mint", "DarkSlateGray", "ManganeseBlue", "SlateGray", 
              "DarkOrange", "MistyRose", "DeepNaplesYellow", "GoldOchre", 
              "SapGreen"}]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`NiceColorSet = ReplaceAll[
             ReplaceAll[$CellContext`NiceColorSetNames, 
              ColorData["Legacy", "ColorRules"]], 
             
             Thread[{"Red", "Green", "Blue", "Yellow", "Magenta"} -> {
               Red, Green, Blue, Yellow, Magenta}]]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`SoftColorsPlus[
             Optional[
              Pattern[$CellContext`c, 
               Blank[]], 
              GrayLevel[1]]] := {
             Lighter[
              RGBColor[1, 0.05, 0.3]], 
             Lighter[
              RGBColor[0.4, 1, 0.4]], 
             Lighter[
              RGBColor[0.1, 0.7, 1]], 
             Lighter[
              RGBColor[1, 1, 0.5]], $CellContext`c}; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`extend[
             Pattern[$CellContext`l, 
              Blank[]]] := Append[$CellContext`l, 
             First[$CellContext`l]]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`canon[
             Pattern[$CellContext`l, 
              Blank[]]] := 
           RotateLeft[$CellContext`l, Ordering[$CellContext`l, 1] - 1]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`join[{
              Pattern[$CellContext`n, 
               Blank[]], 
              Pattern[$CellContext`l, 
               Blank[]]}] := Map[Join[{$CellContext`n}, #]& , $CellContext`l]; 
          Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`edgesSorted[
             Pattern[$CellContext`l, 
              Blank[]]] := Map[Sort, 
             Partition[
              $CellContext`extend[$CellContext`l], 2, 1]]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`adjacent[
             Pattern[$CellContext`face1, 
              Blank[]], 
             Pattern[$CellContext`face2, 
              Blank[]]] := If[
             
             And[$CellContext`face1 =!= $CellContext`face2, 
              Apply[Intersection, 
                
                Map[$CellContext`edgesSorted, {$CellContext`face1, \
$CellContext`face2}]] != {}], 1, 0]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`EdgesSW[
             Pattern[$CellContext`G, 
              Blank[$CellContext`Graph]]] := Map[First, 
             Part[$CellContext`G, 1]]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`ToAdjacencyListsSW[
             Pattern[$CellContext`G, 
              Blank[$CellContext`Graph]]] := ($CellContext`etemp = 
             Union[$CellContext`ee = Map[Sort, 
                 $CellContext`EdgesSW[$CellContext`G]], 
               Map[Reverse, $CellContext`ee]]; $CellContext`missing = 
             Complement[
               Range[
                Length[
                 Part[$CellContext`G, 2]]], 
               Map[First, $CellContext`etemp]]; $CellContext`etemp = Sort[
               Join[$CellContext`etemp, 
                
                Table[{$CellContext`m, {}}, {$CellContext`m, \
$CellContext`missing}]]]; ReplaceAll[
              ReplaceAll[
               Split[$CellContext`etemp, Part[#, 1] === Part[#2, 1]& ], {
                 Blank[Integer], 
                 Pattern[$CellContext`n, 
                  Blank[]]} :> $CellContext`n], {{}} -> {}]); Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`EdgeSet[
             $CellContext`PlanarGraph[
              Pattern[$CellContext`g, 
               BlankSequence[]]]] := $CellContext`EdgeSet[
             $CellContext`Graph[$CellContext`g]]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`EdgeSet[
             Pattern[$CellContext`g, 
              Blank[$CellContext`Graph]]] := Map[First, 
             Part[$CellContext`g, 1]]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`Neighbors[
             Pattern[$CellContext`g, 
              Blank[$CellContext`Graph]], 
             Pattern[$CellContext`v, 
              Blank[Integer]]] := Cases[
             Part[$CellContext`g, 1], Alternatives[{{
                 Pattern[$CellContext`z, 
                  Blank[]], $CellContext`v, 
                 BlankNullSequence[]}}, {{$CellContext`v, 
                 Pattern[$CellContext`z, 
                  Blank[]], 
                 BlankNullSequence[]}}] :> $CellContext`z]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`Neighbors[
             Pattern[$CellContext`g, 
              Blank[$CellContext`PlanarGraph]], 
             Pattern[$CellContext`v, 
              Blank[]]] := $CellContext`Neighbors[
             Apply[$CellContext`Graph, $CellContext`g], $CellContext`v]; 
          Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`Neighbors[
             Pattern[$CellContext`g, 
              Blank[]], 
             Pattern[$CellContext`v, 
              Blank[List]]] := Apply[Union, 
             
             Map[$CellContext`Neighbors[$CellContext`g, #]& , \
$CellContext`v]]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`Neighbors[
             Pattern[$CellContext`adj, 
              Blank[List]], 
             Pattern[$CellContext`v, 
              Blank[Integer]], 
             Pattern[$CellContext`col, 
              Blank[]], 
             Pattern[$CellContext`goodcol, 
              Blank[]]] := Select[
             Prepend[
              Part[$CellContext`adj, $CellContext`v], $CellContext`v], 
             MemberQ[$CellContext`goodcol, 
              Part[$CellContext`col, #]]& ]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`VV[
             $CellContext`PlanarGraph[
              Blank[], 
              Pattern[$CellContext`v, 
               Blank[]]]] := Length[$CellContext`v]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`VV[
             $CellContext`Graph[
              Blank[], 
              Pattern[$CellContext`v, 
               Blank[]]]] := Length[$CellContext`v]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`VerticesSW[
             $CellContext`PlanarGraph[
              Pattern[$CellContext`g, 
               BlankSequence[]]]] := $CellContext`VerticesSW[
             $CellContext`Graph[$CellContext`g]]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`VerticesSW[
             $CellContext`Graph[
              Blank[], 
              Pattern[$CellContext`vv, 
               Blank[]]]] := Map[First, $CellContext`vv]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`ShowPlanarGraph[
             Pattern[$CellContext`g, 
              Blank[$CellContext`PlanarGraph]], 
             Pattern[$CellContext`vcoloring, 
              Blank[]], 
             Pattern[$CellContext`vcolList, 
              Blank[]], 
             Pattern[$CellContext`opts, 
              BlankNullSequence[Rule]]] := $CellContext`ShowPlanarGraph[
             
             Apply[$CellContext`Graph, $CellContext`g], \
$CellContext`vcoloring, $CellContext`vcolList, $CellContext`opts]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`ShowPlanarGraph[
             Pattern[$CellContext`g1, 
              Blank[$CellContext`Graph]], 
             Pattern[$CellContext`vcoloring, 
              Blank[]], 
             Pattern[$CellContext`vcolList, 
              Blank[]], 
             Pattern[$CellContext`opts, 
              BlankNullSequence[Rule]]] := 
           Module[{$CellContext`g, $CellContext`esty, $CellContext`vsize = 
              PointSize[
               0.045], $CellContext`pts, $CellContext`lines, \
$CellContext`ec}, $CellContext`ec = RGBColor[0.5, 0, 0]; $CellContext`normalQ = 
              False; $CellContext`esty = {}; $CellContext`vcol = {}; If[
               Not[
                
                ListQ[$CellContext`esty]], $CellContext`esty = \
{$CellContext`esty}]; $CellContext`esty = 
              Append[$CellContext`esty, $CellContext`ec]; $CellContext`g = 
              If[$CellContext`normalQ, $CellContext`NormalizeVertices, 
                Identity][$CellContext`g1]; $CellContext`pts = Map[Point, 
                Map[First, 
                 Part[$CellContext`g, 2]]]; $CellContext`colList = 
              Table[{}, {
                 Length[$CellContext`pts]}]; $CellContext`colpts = If[
                
                Or[$CellContext`vcoloring === None, $CellContext`vcoloring === 
                 False], $CellContext`pts, 
                Transpose[{
                  
                  Part[$CellContext`vcolList, $CellContext`vcoloring], \
$CellContext`pts}], $CellContext`pts]; $CellContext`lines = Map[Line[
                 Part[$CellContext`g, 2, #, 1]]& , 
                $CellContext`EdgeSet[$CellContext`g]]; $CellContext`vsize = 
              ReplaceAll[$CellContext`vsize, Automatic -> PointSize[
                  
                  Which[$CellContext`VV[$CellContext`g1] <= 12, 
                   0.035, $CellContext`VV[$CellContext`g1] <= 25, 
                   0.022, $CellContext`VV[$CellContext`g1] <= 100, 0.018, 
                   True, 0.01]]]; Graphics[{
                Join[$CellContext`esty, $CellContext`lines], 
                
                Join[{$CellContext`vcol, $CellContext`vsize}, \
$CellContext`colpts]}, 
               Apply[Sequence, 
                FilterRules[{$CellContext`opts}, 
                 Map[
                 First, {
                  AlignmentPoint -> Center, AspectRatio -> Automatic, Axes -> 
                   False, AxesLabel -> None, AxesOrigin -> Automatic, 
                   AxesStyle -> {}, Background -> None, BaselinePosition -> 
                   Automatic, BaseStyle -> {}, ColorOutput -> Automatic, 
                   ContentSelectable -> Automatic, CoordinatesToolOptions -> 
                   Automatic, DisplayFunction :> $DisplayFunction, 
                   Epilog -> {}, FormatType :> TraditionalForm, Frame -> 
                   False, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> 
                   Automatic, FrameTicksStyle -> {}, GridLines -> None, 
                   GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> 
                   All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, 
                   LabelStyle -> {}, Method -> Automatic, PlotLabel -> None, 
                   PlotRange -> All, PlotRangeClipping -> False, 
                   PlotRangePadding -> Automatic, PlotRegion -> Automatic, 
                   PreserveImageOptions -> Automatic, Prolog -> {}, 
                   RotateLabel -> True, Ticks -> Automatic, 
                   TicksStyle -> {}}]]], 
               PlotRange -> $CellContext`FindPlotRangeSW[
                 Map[List, 
                  $CellContext`VerticesSW[$CellContext`g]]]]]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`AdjMatrixToEdges[
             Pattern[$CellContext`mat, 
              Blank[]]] := Union[
             Map[List, 
              Map[Sort, 
               Position[$CellContext`mat, 1]]]]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`DegreeSequenceOrdered1[
             Pattern[$CellContext`g, 
              Blank[$CellContext`Graph]]] := Map[Length, 
             $CellContext`ToAdjacencyListsSW[$CellContext`g]]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`DegreeSequenceOrdered1[
             Pattern[$CellContext`g, 
              
              Blank[$CellContext`PlanarGraph]]] := \
$CellContext`DegreeSequenceOrdered1[
             Apply[$CellContext`Graph, $CellContext`g]]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`Neighbors1[
             Pattern[$CellContext`g, 
              Blank[$CellContext`Graph]], 
             Pattern[$CellContext`v, 
              Blank[Integer]]] := Cases[
             Part[$CellContext`g, 1], Alternatives[{{
                 Pattern[$CellContext`z, 
                  Blank[]], $CellContext`v, 
                 BlankNullSequence[]}}, {{$CellContext`v, 
                 Pattern[$CellContext`z, 
                  Blank[]], 
                 BlankNullSequence[]}}] :> $CellContext`z]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`Neighbors1[
             Pattern[$CellContext`g, 
              Blank[$CellContext`PlanarGraph]], 
             Pattern[$CellContext`v, 
              Blank[]]] := $CellContext`Neighbors1[
             Apply[$CellContext`Graph, $CellContext`g], $CellContext`v]; 
          Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`Neighbors1[
             Pattern[$CellContext`g, 
              Blank[]], 
             Pattern[$CellContext`v, 
              Blank[List]]] := Apply[Union, 
             
             Map[$CellContext`Neighbors1[$CellContext`g, #]& , \
$CellContext`v]]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`ToAdjacencyLists1[
             Alternatives[
              Pattern[$CellContext`g, 
               Blank[$CellContext`PlanarGraph]], 
              Pattern[$CellContext`g, 
               Blank[$CellContext`Graph]]]] := $CellContext`ToAdjacencyListsSW[
             Apply[$CellContext`Graph, $CellContext`g]]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`MakePointsCounterclockwise1[
             Pattern[$CellContext`pts, 
              Blank[]], 
             Pattern[$CellContext`offset, 
              Blank[]]] := SortBy[
             N[$CellContext`pts], Arg[
              Apply[Complex, # - $CellContext`offset]]& ]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`KempeOrder1[
            Alternatives[
             Pattern[$CellContext`g, 
              Blank[$CellContext`PlanarGraph]], 
             Pattern[$CellContext`g, 
              Blank[$CellContext`Graph]]]] := 
          Module[{$CellContext`degs = \
$CellContext`DegreeSequenceOrdered1[$CellContext`g], $CellContext`v}, 
            Table[$CellContext`v = Part[
                Select[
                 Range[
                  $CellContext`VV[$CellContext`g]], 
                 Part[$CellContext`degs, #] <= 5& , 1], 1]; 
             Part[$CellContext`degs, $CellContext`v] = Infinity; Decrement[
               Part[$CellContext`degs, 
                $CellContext`Neighbors1[$CellContext`g, $CellContext`v]]]; \
$CellContext`v, {
              $CellContext`VV[$CellContext`g]}]]], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`Neighbors1[
             Pattern[$CellContext`adj, 
              Blank[List]], 
             Pattern[$CellContext`v, 
              Blank[Integer]], 
             Pattern[$CellContext`col, 
              Blank[]], 
             Pattern[$CellContext`goodcol, 
              Blank[]]] := Select[
             Prepend[
              Part[$CellContext`adj, $CellContext`v], $CellContext`v], 
             MemberQ[$CellContext`goodcol, 
              Part[$CellContext`col, #]]& ]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`KempeChain1[{
              Pattern[$CellContext`v1, 
               Blank[]], 
              Pattern[$CellContext`vv2, 
               Blank[]]}, 
             Pattern[$CellContext`coloring, 
              Blank[
              List]]] := ($CellContext`answer = $CellContext`coloring; \
$CellContext`chold = {}; $CellContext`chain = {$CellContext`v1}; While[
              And[$CellContext`success = Intersection[
                  
                  Flatten[{$CellContext`vv2}], $CellContext`chain] == {}, \
$CellContext`chain != $CellContext`chold], {$CellContext`chold, \
$CellContext`chain} = {$CellContext`chain, 
                Union[$CellContext`chain, 
                 Apply[Union, 
                  
                  Map[$CellContext`Neighbors1[$CellContext`gadj, #, \
$CellContext`coloring, 
                    Part[$CellContext`coloring, 
                    
                    Flatten[{$CellContext`v1, $CellContext`vv2}]]]& , \
$CellContext`chain]]]}]; 
            If[$CellContext`success, 
              Do[$CellContext`answer = 
                ReplacePart[$CellContext`answer, $CellContext`j -> Part[
                    Complement[
                    Part[$CellContext`coloring, 
                    Flatten[{$CellContext`v1, $CellContext`vv2}]], {
                    Part[$CellContext`answer, $CellContext`j]}], 
                    1]], {$CellContext`j, $CellContext`chain}]; \
$CellContext`answer, False]); Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`InduceSubgraphMatrix[
             $CellContext`GraphMat[
              Pattern[$CellContext`g, 
               Blank[]], 
              Pattern[$CellContext`v, 
               Blank[]]], 
             Pattern[$CellContext`s, 
              Blank[List]]] := Condition[
             $CellContext`GraphMat[
              Transpose[
               Part[
                Transpose[
                 Part[$CellContext`g, $CellContext`s]], $CellContext`s]], 
              Part[$CellContext`v, $CellContext`s]], Length[$CellContext`s] <= 
             Length[$CellContext`g]]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`InduceSubgraphRespectOrder1[
             Pattern[$CellContext`g, 
              Blank[$CellContext`PlanarGraph]], 
             Pattern[$CellContext`verts, 
              Blank[]]] := Apply[$CellContext`PlanarGraph, 
             $CellContext`InduceSubgraphRespectOrder1[
              Apply[$CellContext`Graph, $CellContext`g], $CellContext`verts]]; 
          Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`InduceSubgraphRespectOrder1[
             Pattern[$CellContext`g, 
              Blank[$CellContext`Graph]], 
             Pattern[$CellContext`s, 
              Blank[]]] := $CellContext`FromAdjacencyMatrixSW[
             Part[
              $CellContext`InduceSubgraphMatrix[
               $CellContext`GraphMat[
                $CellContext`ToAdjacencyMatrixSW[$CellContext`g], 
                Map[First, 
                 Part[$CellContext`g, 2]]], $CellContext`s], 1], 
             Part[$CellContext`g, 2, $CellContext`s]]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`colCode = 
           Thread[{1, 2, 3, 4} -> {"red", "green", "blue", "yellow"}]; Null], 
         
         HoldComplete[Null], 
         HoldComplete[$CellContext`FourColoring1[
             Pattern[$CellContext`g, 
              Blank[$CellContext`PlanarGraph]]] := 
           Module[{$CellContext`cols = {}}, $CellContext`KempeList = \
($CellContext`partialcols = {}); $CellContext`order = \
$CellContext`KempeOrder1[$CellContext`g]; $CellContext`fc = {}; 
             Do[$CellContext`nbrs = $CellContext`Neighbors1[
                   $CellContext`InduceSubgraphRespectOrder1[$CellContext`g, 
                    Take[$CellContext`order, -$CellContext`j]], 1] - 1; 
               If[($CellContext`lennbr = Length[
                    Union[
                    Part[$CellContext`cols, $CellContext`nbrs]]]) <= 
                 3, $CellContext`cols = Flatten[{$CellContext`newcol = First[
                    Complement[
                    Range[4], 
                    
                    Part[$CellContext`cols, $CellContext`nbrs]]], \
$CellContext`cols}]; AppendTo[$CellContext`KempeList, {$CellContext`j, 0, 
                    StringForm[
                    " `` `` used for neighbors of ``; first free color for `` \
is ``.", $CellContext`lennbr, 
                    If[$CellContext`lennbr == 1, "color", "colors"], 
                    Part[$CellContext`order, -$CellContext`j], 
                    Part[$CellContext`order, -$CellContext`j], 
                    
                    ReplaceAll[$CellContext`newcol, $CellContext`colCode]]}], \
$CellContext`pts = Map[First, 
                    N[
                    Part[
                    $CellContext`InduceSubgraphRespectOrder1[$CellContext`g, 
                    Take[$CellContext`order, {-$CellContext`j, -1}]], 2, 
                    Prepend[$CellContext`nbrs + 1, 1]]]]; $CellContext`nbrs = 
                  Part[$CellContext`nbrs, 
                    Flatten[
                    Map[Position[
                    Rest[$CellContext`pts], #]& , 
                    $CellContext`MakePointsCounterclockwise1[
                    Rest[$CellContext`pts], 
                    First[$CellContext`pts]]]]]; 
                 Null ($CellContext`gadj = $CellContext`ToAdjacencyLists1[
                    $CellContext`InduceSubgraphRespectOrder1[$CellContext`g, 
                    Take[$CellContext`order, -$CellContext`j + 1]]]); 
                 If[Length[$CellContext`nbrs] == 
                   4, $CellContext`fc1 = $CellContext`KempeChain1[
                    
                    Part[$CellContext`nbrs, {1, 
                    3}], $CellContext`cols]; $CellContext`fc = 
                    If[$CellContext`fc1 =!= False, $CellContext`fc1, 
                    $CellContext`KempeChain1[
                    Part[$CellContext`nbrs, {2, 4}], $CellContext`cols]]; 
                   AppendTo[$CellContext`KempeList, {$CellContext`j, \
$CellContext`j, 
                    StringForm[
                    " Kempe chain for the 4 neighbors of vertex `` frees `` \
for vertex ``.", 
                    Part[$CellContext`order, -$CellContext`j], 
                    ReplaceAll[
                    First[
                    Complement[
                    Range[4], 
                    
                    Part[$CellContext`fc, $CellContext`nbrs]]], \
$CellContext`colCode], 
                    
                    Part[$CellContext`order, -$CellContext`j]]}], \
$CellContext`nbrsColors = 
                    Part[$CellContext`cols, $CellContext`nbrs]; \
$CellContext`dupColor = First[
                    
                    Select[$CellContext`nbrsColors, 
                    Count[$CellContext`nbrsColors, #] == 2& , 
                    1]]; $CellContext`samecolorNbrs = 
                    Select[$CellContext`nbrs, 
                    Part[$CellContext`cols, #] == $CellContext`dupColor& , 
                    2]; $CellContext`samecolorIndices = Sort[
                    Flatten[
                    Map[
                    Position[$CellContext`nbrs, #]& , \
$CellContext`samecolorNbrs]]]; If[
                    MemberQ[{1, 4}, 
                    Abs[
                    Apply[
                    Subtract, $CellContext`samecolorIndices]]], \
$CellContext`v1 = ReplaceAll[$CellContext`samecolorIndices, {{1, 5} -> 1, {
                    Pattern[$CellContext`m, 
                    Blank[]], 
                    Pattern[$CellContext`n, 
                    Blank[]]} :> $CellContext`n}]; $CellContext`v3 = First[
                    
                    DeleteCases[$CellContext`samecolorIndices, \
$CellContext`v1]]; $CellContext`v2 = $CellContext`v1 + 
                    2; $CellContext`fc1 = $CellContext`KempeChain1[{
                    Part[$CellContext`nbrs, 
                    Mod[$CellContext`v2, 5, 1]], 
                    Part[$CellContext`nbrs, 
                    
                    Mod[{$CellContext`v1, $CellContext`v3}, 5, 
                    1]]}, $CellContext`cols]; $CellContext`fc = 
                    If[$CellContext`fc1 =!= False, $CellContext`fc1, 
                    $CellContext`KempeChain1[
                    Part[$CellContext`nbrs, 
                    
                    Mod[{$CellContext`v1 + 1, $CellContext`v2 + 1}, 5, 
                    1]], $CellContext`cols]], $CellContext`v1 = 
                    ReplaceAll[$CellContext`samecolorIndices, {{1, 4} -> 
                    1, {2, 5} -> 2, {
                    Pattern[$CellContext`m, 
                    Blank[]], 
                    Pattern[$CellContext`n, 
                    Blank[]]} :> $CellContext`n}] - 
                    1; $CellContext`v2 = $CellContext`v1 + 
                    2; $CellContext`fc1 = $CellContext`KempeChain1[
                    Part[$CellContext`nbrs, 
                    
                    Mod[{$CellContext`v1, $CellContext`v2}, 5, 
                    1]], $CellContext`cols]; $CellContext`fc = 
                    If[$CellContext`fc1 =!= 
                    False, $CellContext`fc1, $CellContext`fc1 = \
$CellContext`KempeChain1[
                    Part[$CellContext`nbrs, 
                    
                    Mod[{$CellContext`v1, $CellContext`v2 + 1}, 5, 
                    1]], $CellContext`cols]; 
                    If[$CellContext`fc1 =!= 
                    False, $CellContext`fc1, $CellContext`fc1 = \
$CellContext`KempeChain1[
                    Part[$CellContext`nbrs, 
                    
                    Mod[{$CellContext`v1 + 1, $CellContext`v2 + 1}, 5, 
                    1]], $CellContext`cols]; 
                    If[$CellContext`fc1 === False, 
                    AppendTo[$CellContext`KempeList, {$CellContext`j, \
$CellContext`j, 
                    " Kempe chains tangled; the method failed to free a color \
for vertex 1."}]; AppendTo[$CellContext`partialcols, 
                    Part[$CellContext`partialcols, -1]]; 
                    Return[$Failed], $CellContext`fc2 = \
$CellContext`KempeChain1[
                    Part[$CellContext`nbrs, 
                    
                    Mod[{$CellContext`v1 - 1, $CellContext`v2}, 5, 
                    1]], $CellContext`fc1]; 
                    If[$CellContext`fc2 =!= False, $CellContext`fc2, 
                    AppendTo[$CellContext`KempeList, {$CellContext`j, \
$CellContext`j, 
                    " Kempe chains tangled; the method failed to free a color \
for vertex 1."}]; AppendTo[$CellContext`partialcols, 
                    Part[$CellContext`partialcols, -1]]; Return[$Failed]]]]]]; 
                   Null AppendTo[$CellContext`KempeList, {$CellContext`j, \
$CellContext`j, 
                    StringForm[
                    " Kempe chain for the 5 neighbors of vertex `` frees `` \
for vertex ``.", 
                    Part[$CellContext`order, -$CellContext`j], 
                    ReplaceAll[
                    First[
                    Complement[
                    Range[4], 
                    
                    Part[$CellContext`fc, $CellContext`nbrs]]], \
$CellContext`colCode], 
                    Part[$CellContext`order, -$CellContext`j]]}]]; 
                 Null If[$CellContext`fc =!= $Failed, $CellContext`cols = 
                    Flatten[{
                    First[
                    Complement[
                    Range[4], 
                    
                    Part[$CellContext`fc, $CellContext`nbrs]]], \
$CellContext`fc}]]]; AppendTo[$CellContext`partialcols, 
                 Part[
                  PadLeft[$CellContext`cols, 
                   Length[
                    Part[$CellContext`g, 2]], 5], 
                  $CellContext`InversePermutation[$CellContext`order]]], \
{$CellContext`j, 
                $CellContext`VV[$CellContext`g]}]; 
             If[$CellContext`fc === $Failed, $Failed, 
               Part[$CellContext`cols, 
                $CellContext`InversePermutation[$CellContext`order]]]]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`vertsSpec[
             Blank[]] = {}; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`vertsSpec[20] = {8, 18, 11, 6, 19, 14, 10, 
            2, 13}; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`vertsSpec[15] = {10, 12, 5, 4, 15}; Null], 
         
         HoldComplete[Null], 
         HoldComplete[$CellContext`vertsSpec[15] = {9, 1, 11, 6}; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`vertsSpec[10] = {5, 4}; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`vertsSpec[5] = {1}; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`vertsSpec[25] = {18, 10, 9, 12, 24, 7, 24, 
            5, 7, 10, 3, 11, 10, 5, 24, 7, 2, 24, 7, 2, 12, 17, 20}; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`vertsSpec[30] = {1, 20, 10, 1, 17, 3, 14, 
            21, 19, 4, 10, 19, 5, 6, 1, 17, 19, 12, 28, 26, 12, 28, 1, 17}; 
          Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`RandomPlanarGraphSpecial[
             Pattern[$CellContext`n, 
              Blank[]]] := 
           Part[$CellContext`RandomPlanarGraphSpecialData, $CellContext`n/5]; 
          Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`RandomPlanarGraphSpecialData = {
             $CellContext`PlanarGraph[{{{1, 2}}, {{1, 3}}, {{1, 4}}, {{1, 
              5}}, {{2, 4}}, {{2, 5}}, {{3, 4}}, {{3, 5}}}, {{{0.63, 
              0.64}}, {{0.75, 0.99}}, {{0.88, 0.37}}, {{0.8301, 0.89}}, {{
              0.07, 0.32}}}], 
             $CellContext`PlanarGraph[{{{1, 3}}, {{1, 4}}, {{1, 5}}, {{1, 
              8}}, {{1, 9}}, {{2, 6}}, {{2, 7}}, {{2, 10}}, {{3, 5}}, {{3, 
              7}}, {{3, 8}}, {{4, 5}}, {{4, 9}}, {{5, 7}}, {{5, 9}}, {{5, 
              10}}, {{6, 8}}, {{6, 9}}, {{6, 10}}, {{7, 10}}, {{8, 9}}, {{9, 
              10}}}, {{{0.73, 0.61}}, {{0.01, 0.64}}, {{0.86, 0.46}}, {{0.65, 
              0.62}}, {{0.56, 0.5}}, {{0.21, 0.91}}, {{0.28, 0.02}}, {{0.96, 
              0.84}}, {{0.64, 0.74}}, {{0.15, 0.56}}}], 
             $CellContext`PlanarGraph[{{{1, 4}}, {{1, 6}}, {{1, 8}}, {{1, 
              13}}, {{1, 14}}, {{1, 15}}, {{2, 3}}, {{2, 4}}, {{2, 7}}, {{2, 
              11}}, {{3, 4}}, {{3, 8}}, {{3, 14}}, {{4, 6}}, {{4, 8}}, {{4, 
              11}}, {{4, 13}}, {{5, 9}}, {{5, 10}}, {{5, 14}}, {{5, 15}}, {{6,
               8}}, {{7, 11}}, {{7, 12}}, {{8, 14}}, {{9, 10}}, {{9, 13}}, {{
              9, 15}}, {{10, 12}}, {{10, 13}}, {{11, 12}}, {{11, 13}}, {{12, 
              13}}, {{13, 15}}, {{14, 15}}}, {{{0.48, 0.35003}}, {{0.07, 
              0.86}}, {{0.05, 0.26}}, {{0.22, 0.56}}, {{0.91, 0.02}}, {{0.31, 
              0.41003}}, {{0.22, 0.98}}, {{0.21, 0.31}}, {{0.85, 0.31}}, {{
              0.98, 0.44}}, {{0.4, 0.77}}, {{0.7001, 0.9401}}, {{0.78, 
              0.52}}, {{0.63, 0.08}}, {{0.73, 0.26}}}], 
             $CellContext`PlanarGraph[{{{1, 8}}, {{1, 9}}, {{1, 16}}, {{1, 
              17}}, {{2, 3}}, {{2, 4}}, {{2, 8}}, {{2, 10}}, {{2, 16}}, {{3, 
              7}}, {{3, 8}}, {{3, 9}}, {{3, 10}}, {{3, 14}}, {{4, 6}}, {{4, 
              10}}, {{4, 15}}, {{4, 16}}, {{4, 20}}, {{5, 11}}, {{5, 13}}, {{
              5, 16}}, {{5, 17}}, {{5, 19}}, {{6, 11}}, {{6, 12}}, {{6, 
              13}}, {{6, 15}}, {{6, 16}}, {{7, 11}}, {{7, 12}}, {{7, 14}}, {{
              7, 18}}, {{7, 19}}, {{8, 9}}, {{8, 16}}, {{10, 14}}, {{10, 
              20}}, {{11, 12}}, {{11, 13}}, {{11, 19}}, {{12, 15}}, {{12, 
              18}}, {{12, 20}}, {{13, 16}}, {{14, 18}}, {{14, 20}}, {{15, 
              20}}, {{16, 17}}, {{17, 19}}, {{18, 
              20}}}, {{{0.1, 0.88}}, {{0.21, 0.45}}, {{0.07, 0.2}}, {{0.33, 
               0.43}}, {{0.73, 0.6901}}, {{0.52, 0.54}}, {{0.99, 0.03}}, {{
               0.1, 0.59}}, {{0, 0.86}}, {{0.34, 0.28}}, {{0.74, 0.52}}, {{
               0.68, 0.44}}, {{0.55, 0.63}}, {{0.54, 0.21}}, {{0.55, 
               0.43}}, {{0.19, 0.77}}, {{0.8201, 0.75}}, {{0.6901, 0.25}}, {{
               0.8201, 0.5}}, {{0.58, 0.33}}}], 
             $CellContext`PlanarGraph[{{{1, 6}}, {{1, 8}}, {{1, 17}}, {{1, 
              20}}, {{1, 23}}, {{2, 7}}, {{2, 12}}, {{2, 15}}, {{2, 24}}, {{2,
               25}}, {{3, 4}}, {{3, 7}}, {{3, 9}}, {{3, 12}}, {{3, 16}}, {{4, 
              7}}, {{4, 10}}, {{4, 11}}, {{4, 16}}, {{4, 18}}, {{4, 23}}, {{5,
               7}}, {{5, 10}}, {{5, 14}}, {{5, 15}}, {{5, 22}}, {{6, 8}}, {{6,
               11}}, {{6, 13}}, {{6, 17}}, {{6, 18}}, {{6, 20}}, {{7, 10}}, {{
              7, 12}}, {{7, 15}}, {{7, 24}}, {{8, 13}}, {{8, 17}}, {{9, 
              12}}, {{9, 16}}, {{9, 21}}, {{10, 11}}, {{10, 22}}, {{11, 
              13}}, {{11, 18}}, {{11, 22}}, {{12, 21}}, {{12, 25}}, {{13, 
              22}}, {{14, 15}}, {{14, 22}}, {{14, 25}}, {{15, 24}}, {{15, 
              25}}, {{16, 19}}, {{16, 21}}, {{16, 23}}, {{18, 20}}, {{18, 
              23}}, {{19, 21}}, {{19, 23}}, {{20, 23}}, {{21, 
              25}}}, CompressedData["
1:eJxTTMoPSmVmYGCQBGJGIGYC4mqRde4Pq1rs3wTukGt9fdHe42EVUOSl/ZIC
W67rix/Yg7kPH8HpzMcdW3+I3IPyb0HVvYDSF+DmMIDBBXuP/bWyFunP7M+e
AYE7UPmN9hB7p9gbg8FjqPoX9tcXgwx6bN9/6KtGTP8l+0KQsQV3McyTb30N
NOmp/TegqkNfb9iDTA3cMc/+O1v8DB/Rd/azZoLATqh5r6H0Zbj7IeY+herb
Z88FVnAc6p7LcP/B3BEEVvgCKn7KfpK9RMU721tQfzyxB5Ei697bHwYpPwQz
dx2UPgcXh4Uv2Pmtt6H2vYaGzxN7ACefxa8=
              "]], 
             $CellContext`PlanarGraph[{{{1, 4}}, {{1, 10}}, {{1, 12}}, {{1, 
              16}}, {{1, 17}}, {{1, 23}}, {{1, 26}}, {{1, 28}}, {{2, 3}}, {{2,
               15}}, {{2, 20}}, {{2, 25}}, {{2, 27}}, {{2, 29}}, {{2, 30}}, {{
              3, 14}}, {{3, 15}}, {{3, 21}}, {{3, 25}}, {{4, 10}}, {{4, 
              14}}, {{4, 18}}, {{4, 26}}, {{5, 6}}, {{5, 19}}, {{5, 21}}, {{5,
               22}}, {{5, 25}}, {{6, 7}}, {{6, 22}}, {{6, 25}}, {{7, 8}}, {{7,
               22}}, {{7, 25}}, {{7, 30}}, {{8, 13}}, {{8, 22}}, {{8, 29}}, {{
              8, 30}}, {{9, 11}}, {{9, 15}}, {{9, 20}}, {{9, 27}}, {{10, 
              13}}, {{10, 14}}, {{10, 17}}, {{10, 19}}, {{10, 24}}, {{11, 
              12}}, {{11, 15}}, {{11, 16}}, {{11, 18}}, {{11, 26}}, {{11, 
              28}}, {{12, 26}}, {{12, 28}}, {{13, 19}}, {{13, 22}}, {{13, 
              24}}, {{14, 15}}, {{14, 18}}, {{14, 19}}, {{14, 21}}, {{15, 
              18}}, {{15, 20}}, {{16, 23}}, {{16, 28}}, {{17, 23}}, {{17, 
              24}}, {{18, 26}}, {{19, 21}}, {{19, 22}}, {{20, 27}}, {{21, 
              25}}, {{23, 24}}, {{25, 30}}, {{27, 29}}, {{29, 
              30}}}, CompressedData["
1:eJxTTMoPSmVmYGCQA2JGIGYC4sNfNWL6D121v764wJbr+mX7N4E75FpfP7RX
SH4X5WT3yt7jYZXIOveH9t/Z4mf4iD6zB7KBAtftC4GqFxfctecCa3xu338I
ZNAj+yCQ9sAX9kACyHpsD9H+yr4aRFU9sffYXytrkf4Oqv8pVHwLlH4DNwdi
7nV7sHE71tnPmgkCD6Hmn4CaewuuDyJ+w54BDB7A/WEMBpeh9j6Dmrsdqu8I
3FyIeaeg9l+CuwPmb5i58mCPXYWa+9peMwak8gmU/9i+UJr3ge6EV/ZLQK5f
/ABuPsQ9G+HhBRHfCTXvKdweiH/PoYXvdWi4v4e7GyYOsw8WzpD4egl17wt7
ABb544E=
              "]]}; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`fix[
             Pattern[$CellContext`g, 
              Blank[]], 
             Pattern[$CellContext`verts1, 
              Blank[]]] := 
           Module[{$CellContext`g1 = $CellContext`g}, 
             Do[$CellContext`g1 = $CellContext`PlanarGraph[
                 Part[$CellContext`g1, 1], 
                 Map[List, 
                  Table[
                   If[$CellContext`vv == $CellContext`i, 
                    Mean[
                    Map[First, 
                    Part[$CellContext`g1, 2, 
                    $CellContext`Neighbors[$CellContext`g, $CellContext`i]]]], 
                    
                    Part[$CellContext`g1, 2, $CellContext`i, 
                    1]], {$CellContext`i, 
                    Length[
                    
                    Part[$CellContext`g, 
                    2]]}]]], {$CellContext`vv, $CellContext`verts1}]; \
$CellContext`g1]; Null], 
         HoldComplete[Null], 
         HoldComplete[$CellContext`f[
             Pattern[$CellContext`m, 
              Blank[]]] := $CellContext`m; $CellContext`f[
             Pattern[$CellContext`x, 
              Blank[String]]] = 17; Null]}}]; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->99725222],

Cell[CellGroupData[{

Cell["Caption", "Section",
 CellFrameColor->RGBColor[
  0.6449835965514611, 0.758632791638056, 0.2516823071641108],
 FontColor->RGBColor[
  0.6449835965514611, 0.758632791638056, 0.2516823071641108]],

Cell[TextData[{
 "The famous four-color theorem, proved in 1976, says that the vertices of \
any planar graph can be colored in four colors so that adjacent vertices \
receive different colors. Kempe's method of 1879, despite falling short of \
being a proof, does lead to a good algorithm for four-coloring planar graphs. \
The method is recursive. One finds a vertex ",
 Cell[BoxData[
  FormBox["u", TraditionalForm]], "InlineMath"],
 " that has degree at most 5; such exists by Euler's formula for graphs in \
the plane, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"V", "-", "E", "+", "F"}], "=", "2"}], TraditionalForm]], 
  "InlineMath"],
 ", where ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]], "InlineMath"],
 ", ",
 Cell[BoxData[
  FormBox["E", TraditionalForm]], "InlineMath"],
 ", and ",
 Cell[BoxData[
  FormBox["F", TraditionalForm]], "InlineMath"],
 " are the number of vertices, edges, and faces. Then assume the rest of the \
graph to be properly colored and color ",
 Cell[BoxData[
  FormBox["u", TraditionalForm]], "InlineMath"],
 " by considering three cases:"
}], "Text"]
}, Close]]
}, Open  ]],

Cell[TextData[{
 "Case 1.",
 " ",
 "The neighbors of ",
 Cell[BoxData[
  FormBox["u", TraditionalForm]], "InlineMath"],
 " use fewer than four colors: then there is a free color for ",
 Cell[BoxData[
  FormBox["u", TraditionalForm]], "InlineMath"],
 "."
}], "Text"],

Cell[TextData[{
 "Case 2.",
 " ",
 "There are four neighbors of ",
 Cell[BoxData[
  FormBox["u", TraditionalForm]], "InlineMath"],
 " and they use all four colors. Then use the Kempe chain method to switch \
some colors so that only three are used, thus freeing up a color for ",
 Cell[BoxData[
  FormBox["u", TraditionalForm]], "InlineMath"],
 ". "
}], "Text"],

Cell[TextData[{
 "Case 3. There are five neighbors of ",
 Cell[BoxData[
  FormBox["u", TraditionalForm]], "InlineMath"],
 " and they use all four colors. Then use the Kempe chain method to switch \
some colors so that only three are used, thus freeing up a color for ",
 Cell[BoxData[
  FormBox["u", TraditionalForm]], "InlineMath"],
 ". "
}], "Text"],

Cell[TextData[{
 "This Demonstration shows how the algorithm proceeds, starting from the base \
case of a single vertex and progressing through the recursion until all \
vertices are colored. For most graphs, such as the random graphs appearing as \
choices ",
 Cell[BoxData[
  FormBox[
   RowBox[{"G", 
    RowBox[{"(", "n", ")"}]}], TraditionalForm]], "InlineMath"],
 ", where ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]], "InlineMath"],
 " is the number of vertices, the method works very well. Kempe thought that \
the method would always work, but there are examples for which the Kempe \
chain method fails in Case 3, notably a 17-vertex graph allowed as a choice \
in this Demonstration. One can still use the method provided one first \
permutes the vertex order (one such permuted graph is the last choice). \
Experiments show that for 90% of the permutations, the Kempe impasse in this \
example disappears."
}], "Text"],

Cell[CellGroupData[{

Cell["Details", "Section",
 CellFrameColor->RGBColor[
  0.6449835965514611, 0.758632791638056, 0.2516823071641108],
 FontColor->RGBColor[
  0.6449835965514611, 0.758632791638056, 0.2516823071641108]],

Cell["\<\
Snapshot 1. Kempe's method always works in the four-neighbor case. In this \
15-vertex example the colors of vertices 4 and 6 can be switched (a \
yellow-green Kempe chain), which frees up yellow for use on 2.\
\>", "Text"],

Cell["\<\
Snapshot 2. For the counterexample, Kempe's chains get tangled at the last \
step, when vertex 1 is to be colored. One tries to eliminate the green at 12 \
by switching green and yellow at 12 and 7; thus vertex 7 becomes green. Then \
the attempted elimination of the other green at 10 via a green/blue chain \
(10, 9, 7, 6, 13, 8, 11, 5) hits the newly colored green at 7 and continues \
through to 5, which ends up green, thus foiling the attempt.\
\>", "Text"],

Cell["\<\
Snapshot 3. For this permutation of the bad example the last step again \
involves vertex 1, but now only three colors appear among its five neighbors \
so it gets colored green.\
\>", "Text"],

Cell["\<\
For complete details of the Kempe chain operation see [1] or [2]. The method \
always works when there are four neighbors of the current vertex. While the \
error in Kempe's method was discovered by P. J. Heawood in 1889, the first \
example of a graph that foils the algorithm was due to A. Errera in 1921.\
\>", "Text"],

Cell["\<\
While the success probability for permutations of the Errera graph is 90%, \
for the graph consisting of several disjoint copies of the Errera graph, this \
probability would quickly decrease. Thus one should use a more general method \
that combines Kempe's ideas with those of I. Kittell; see details in [2].\
\>", "Text"],

Cell[TextData[{
 "[1] J. P. Hutchinson and S. Wagon, \"Kempe Revisited,\" ",
 StyleBox["American Mathematical Monthly,",
  FontSlant->"Italic"],
 " ",
 StyleBox["105",
  FontWeight->"Bold"],
 ", (1998) pp. 170\[Dash]174."
}], "Text"],

Cell[TextData[{
 "[2] S. Wagon, ",
 StyleBox["Mathematica in Action",
  FontSlant->"Italic"],
 ", 3rd ed., New York: Springer-Verlag, 2010."
}], "Text"]
}, Close]],

Cell[CellGroupData[{

Cell["THIS NOTEBOOK IS THE SOURCE CODE FROM", "Text",
 CellFrame->{{0, 0}, {0, 1}},
 CellMargins->{{48, 10}, {4, 28}},
 CellGroupingRules->{"SectionGrouping", 25},
 CellFrameMargins->{{48, 48}, {6, 5}},
 CellFrameColor->RGBColor[0.691905, 0.790311, 0.300252],
 FontFamily->"Helvetica",
 FontSize->10,
 FontWeight->"Bold",
 FontColor->RGBColor[0.691905, 0.790311, 0.300252]],

Cell[TextData[{
 "\"",
 ButtonBox["Four-Coloring Planar Graphs",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/FourColoringPlanarGraphs/"], None},
  
  ButtonNote->"http://demonstrations.wolfram.com/FourColoringPlanarGraphs/"],
 "\"",
 " from ",
 ButtonBox["The Wolfram Demonstrations Project",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/"], None},
  ButtonNote->"http://demonstrations.wolfram.com/"],
 "\[ParagraphSeparator]\[NonBreakingSpace]",
 ButtonBox["http://demonstrations.wolfram.com/FourColoringPlanarGraphs/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/FourColoringPlanarGraphs/"], None},
  
  ButtonNote->"http://demonstrations.wolfram.com/FourColoringPlanarGraphs/"]
}], "Text",
 CellMargins->{{48, Inherited}, {0, Inherited}},
 FontFamily->"Verdana",
 FontSize->10,
 FontColor->GrayLevel[0.5]],

Cell[" ", "Text",
 CellFrame->{{0, 0}, {0, 1}},
 CellMargins->{{48, 10}, {4, 28}},
 CellGroupingRules->{"SectionGrouping", 25},
 CellFrameMargins->{{48, 48}, {6, 5}},
 CellFrameColor->RGBColor[0.691905, 0.790311, 0.300252],
 FontFamily->"Helvetica",
 FontSize->10,
 FontWeight->"Bold",
 FontColor->RGBColor[0.691905, 0.790311, 0.300252]],

Cell[TextData[{
 "Contributed by: ",
 ButtonBox["Stan Wagon",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Stan+Wagon"], 
    None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Stan+Wagon"],
 " (Macalester College)"
}], "Text",
 CellDingbat->"\[FilledSmallSquare]",
 CellMargins->{{66, 48}, {2, 4}},
 FontFamily->"Verdana",
 FontSize->10,
 FontColor->GrayLevel[0.6]],

Cell[CellGroupData[{

Cell[TextData[{
 "A full-function Wolfram ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " system (Version 6 or higher) is required to edit this notebook.\n",
 StyleBox[ButtonBox["GET WOLFRAM MATHEMATICA \[RightGuillemet]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.wolfram.com/products/mathematica/"], None},
  ButtonNote->"http://www.wolfram.com/products/mathematica/"],
  FontFamily->"Helvetica",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0.42, 0]]
}], "Text",
 CellFrame->True,
 CellMargins->{{48, 68}, {8, 28}},
 CellFrameMargins->12,
 CellFrameColor->RGBColor[0.865507, 0.90634, 0.680751],
 CellChangeTimes->{3.3750111182355957`*^9},
 ParagraphSpacing->{1., 1.},
 FontFamily->"Verdana",
 FontSize->10,
 FontColor->GrayLevel[0.411765],
 Background->RGBColor[0.986023, 0.991363, 0.969818]],

Cell[TextData[{
 "\[Copyright] ",
 StyleBox[ButtonBox["The Wolfram Demonstrations Project & Contributors",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/"], None},
  ButtonNote->"http://demonstrations.wolfram.com/"],
  FontColor->GrayLevel[0.6]],
 "\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
 StyleBox[ButtonBox["Terms of Use",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/termsofuse.html"], None},
  ButtonNote->"http://demonstrations.wolfram.com/termsofuse.html"],
  FontColor->GrayLevel[0.6]],
 "\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
 StyleBox[ButtonBox["Make a new version of this Demonstration \
\[RightGuillemet]",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/participate/upload.jsp?id=\
FourColoringPlanarGraphs"], None},
  ButtonNote->None],
  FontColor->GrayLevel[0.6]]
}], "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellMargins->{{48, 10}, {20, 50}},
 CellFrameMargins->{{6, 0}, {6, 6}},
 CellFrameColor->GrayLevel[0.6],
 FontFamily->"Verdana",
 FontSize->9,
 FontColor->GrayLevel[0.6]]
}, Open  ]]
}, Open  ]]
},
Editable->True,
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{710, 650},
WindowMargins->{{Inherited, Inherited}, {Inherited, 0}},
WindowElements->{
 "StatusArea", "MemoryMonitor", "MagnificationPopUp", "VerticalScrollBar", 
  "MenuBar"},
WindowTitle->"Four-Coloring Planar Graphs - Source",
DockedCells->{},
CellContext->Notebook,
FrontEndVersion->"7.0 for Microsoft Windows (32-bit) (February 18, 2009)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[617, 23, 219, 4, 70, "Section"],
Cell[839, 29, 126949, 3384, 70, "Input",
 InitializationCell->True,
 CellID->1156567507],
Cell[127791, 3415, 10214, 221, 70, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138042, 3641, 95938, 1902, 70, "Output",
 CellID->99725222],
Cell[CellGroupData[{
Cell[234005, 5547, 199, 4, 70, "Section"],
Cell[234207, 5553, 1104, 29, 70, "Text"]
}, Close]]
}, Open  ]],
Cell[235337, 5586, 265, 10, 70, "Text"],
Cell[235605, 5598, 361, 11, 70, "Text"],
Cell[235969, 5611, 351, 9, 70, "Text"],
Cell[236323, 5622, 936, 19, 70, "Text"],
Cell[CellGroupData[{
Cell[237284, 5645, 199, 4, 70, "Section"],
Cell[237486, 5651, 233, 4, 70, "Text"],
Cell[237722, 5657, 473, 7, 70, "Text"],
Cell[238198, 5666, 202, 4, 70, "Text"],
Cell[238403, 5672, 331, 5, 70, "Text"],
Cell[238737, 5679, 334, 5, 70, "Text"],
Cell[239074, 5686, 233, 8, 70, "Text"],
Cell[239310, 5696, 152, 5, 70, "Text"]
}, Close]],
Cell[CellGroupData[{
Cell[239498, 5706, 373, 9, 70, "Text",
 CellGroupingRules->{"SectionGrouping", 25}],
Cell[239874, 5717, 930, 26, 70, "Text"],
Cell[240807, 5745, 337, 9, 70, "Text",
 CellGroupingRules->{"SectionGrouping", 25}],
Cell[241147, 5756, 453, 15, 70, "Text"],
Cell[CellGroupData[{
Cell[241625, 5775, 847, 24, 70, "Text"],
Cell[242475, 5801, 1200, 33, 70, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
(* NotebookSignature AQ4BW2JNqpQLtA0ztoc#TITi *)
